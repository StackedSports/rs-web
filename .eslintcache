[{"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\index.js":"1","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\App.js":"2","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\index.js":"3","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\Home.js":"4","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\index.js":"5","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\model.js":"6","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\chart.js":"7","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\table.js":"8","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeElements.js":"9","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\filterModal.js":"10","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\barChart.js":"11","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeRight.js":"12","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\signupElements.js":"13","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\form.js":"14","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeElementsRight.js":"15","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\canvaJS\\canvasjs.react.js":"16","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\checkbox.js":"17","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\canvaJS\\canvasjs.min.js":"18","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\ApiHelper.js":"19","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\charts\\Doughnut.jsx":"20","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\charts\\BarChart.jsx":"21","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\Pages\\Contacts.js":"22","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\sidebar.js":"23","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\sidebarData.js":"24","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\globalStyle.js":"25","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\subMenu.js":"26","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\Contacts\\index.js":"27","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Elements\\Elements.js":"28","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Fields\\IconTextField.js":"29","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Buttons\\IconButton.js":"30"},{"size":230,"mtime":1610015307888,"results":"31","hashOfConfig":"32"},{"size":739,"mtime":1611745589521,"results":"33","hashOfConfig":"32"},{"size":392,"mtime":1611745841602,"results":"34","hashOfConfig":"32"},{"size":29436,"mtime":1611747102181,"results":"35","hashOfConfig":"32"},{"size":627,"mtime":1610015307876,"results":"36","hashOfConfig":"32"},{"size":3197,"mtime":1610544265580,"results":"37","hashOfConfig":"32"},{"size":1307,"mtime":1610539485516,"results":"38","hashOfConfig":"32"},{"size":9206,"mtime":1611574597603,"results":"39","hashOfConfig":"32"},{"size":6441,"mtime":1611142065308,"results":"40","hashOfConfig":"32"},{"size":10561,"mtime":1611146602992,"results":"41","hashOfConfig":"32"},{"size":1366,"mtime":1610957303716,"results":"42","hashOfConfig":"43"},{"size":7098,"mtime":1611572033347,"results":"44","hashOfConfig":"32"},{"size":5448,"mtime":1610015307876,"results":"45","hashOfConfig":"32"},{"size":8044,"mtime":1610026608573,"results":"46","hashOfConfig":"32"},{"size":4153,"mtime":1611575727312,"results":"47","hashOfConfig":"32"},{"size":1782,"mtime":1610015307867,"results":"48","hashOfConfig":"32"},{"size":1405,"mtime":1610015307876,"results":"49","hashOfConfig":"32"},{"size":460150,"mtime":1610015307866,"results":"50","hashOfConfig":"32"},{"size":10721,"mtime":1611569167362,"results":"51","hashOfConfig":"32"},{"size":2934,"mtime":1611568673446,"results":"52","hashOfConfig":"32"},{"size":2791,"mtime":1611568676158,"results":"53","hashOfConfig":"32"},{"size":463,"mtime":1611755406325,"results":"54","hashOfConfig":"32"},{"size":9224,"mtime":1611758910245,"results":"55","hashOfConfig":"32"},{"size":2789,"mtime":1611756318026,"results":"56","hashOfConfig":"32"},{"size":127,"mtime":1610015307874,"results":"57","hashOfConfig":"32"},{"size":2098,"mtime":1611756360530,"results":"58","hashOfConfig":"32"},{"size":12517,"mtime":1611758985552,"results":"59","hashOfConfig":"32"},{"size":832,"mtime":1611747963489,"results":"60","hashOfConfig":"32"},{"size":755,"mtime":1611752747982,"results":"61","hashOfConfig":"32"},{"size":773,"mtime":1611752753567,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kazu1w",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"1yymdav",{"filePath":"88","messages":"89","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\index.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\App.js",["128"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\index.js",["129","130","131"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\Home.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Chart from \"./chart\";\r\nimport styled from \"styled-components\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DashboardContainer,\r\n  Title,\r\n  Titleheading,\r\n  Titleparagrapg,\r\n  TableSection,\r\n  TableHeaderCol1Heading,\r\n  TableHeaderCol2P,\r\n  TableHeaderRight,\r\n  DateField,\r\n  FilterField,\r\n  FilterIcon,\r\n  FilterText,\r\n  TableFooter,\r\n  TableFooterText,\r\n  ChartSection,\r\n  ChartDiv,\r\n  ChartDiv2,\r\n  ChartTop,\r\n  MM,\r\n  MMH,\r\n  MonthField,\r\n  Count,\r\n  ChartFooter,\r\n  ChartFooterButton,\r\n  ChartFooterContent,\r\n  ChartFooterButton2,\r\n  ChartFooterButton3,\r\n  ChartDivS,\r\n  ChartTop2,\r\n} from \"./homeElements\";\r\nimport Table from \"./table\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport HomeRight from \"./homeRight\";\r\n// import Barchart from \"./barChart\";\r\nimport FilterModal from \"./filterModal\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport Barchart from \"../charts/BarChart\";\r\nimport DoughnutChart from \"../charts/Doughnut\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  getTaskQueueForDay,\r\n  getMonthlyStats,\r\n  getThisQuarterStats,\r\n  getThisYearStats,\r\n  getLastQuarterStats,\r\n  getLastYearStats,\r\n  getLastMonthStats,\r\n  getLast30Stats,\r\n} from \"../../ApiHelper\";\r\n\r\nconst Button = styled.button`\r\n  border-radius: 5px;\r\n  background: #3871da;\r\n  white-space: nowrap;\r\n  padding: 0.5rem;\r\n  width: 150px;\r\n  margin: 20px;\r\n  margin-bottom: 10px;\r\n  box-sizing: border-box;\r\n  font-weight: bold;\r\n  color: white;\r\n  font-size: 14px;\r\n  outtion: all 0.2s ease-in-out;\r\n  @medialine: none;\r\n  border: none;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  text-decoration: none;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transi screen and (max-width: 1000px) {\r\n    width: 180px;\r\n  }\r\n`;\r\n\r\nconst currencies = [\r\n  {\r\n    value: \"1\",\r\n    label: \"Last 30 Days\",\r\n  },\r\n  {\r\n    value: \"2\",\r\n    label: \"This Month\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"This Quarter\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"This Year\",\r\n  },\r\n  {\r\n    value: \"5\",\r\n    label: \"Last Month\",\r\n  },\r\n  {\r\n    value: \"6\",\r\n    label: \"Last Quarter\",\r\n  },\r\n  {\r\n    value: \"7\",\r\n    label: \"Last Year\",\r\n  },\r\n];\r\nconst useStyles = makeStyles({\r\n  underline: {\r\n    \"&&&:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"&&:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  icon: {\r\n    color: \"red\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  input: {\r\n    color: \"#222222\",\r\n    fontSize: 12,\r\n    background: \"transparent\",\r\n    fontFamily: \"ProximaNovaSemibold\",\r\n  },\r\n});\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  // console.log(\"This is logged in user\", localStorage.getItem(\"user\"));\r\n  const [currency, setCurrency] = useState(\"This Month\");\r\n  const [filterBar, setFilterBar] = useState(\"This Month\");\r\n  const [selectedDateQueue, setSelectedDateQueue] = useState(null);\r\n  const [selectedDateQueueCopy, setSelectedDateQueueCopy] = useState(null);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [messageType, setMessageType] = useState(\"All types\");\r\n  const [messageSender, setMessageSender] = useState(\"All Team Members\");\r\n  const [messageStatus, setMessageStatus] = useState(\r\n    \"All status (Excluding Draft)\"\r\n  );\r\n\r\n  const [barChartData, setBarchartData] = useState(null);\r\n  const [doughnutChartData, setDoughnutChatData] = useState(null);\r\n  const [monthlyStats, setMontlyStats] = useState(null);\r\n  const [quarterlyStats, setQuarterlyStats] = useState(null);\r\n  const [yearlyStats, setYearlyStats] = useState(null);\r\n  const [lastMonthStats, setLastMonthStates] = useState(null);\r\n  const [last30Stats, setLast30Stats] = useState(null);\r\n  const [homeRightStats, setHomeRightStats] = useState(null);\r\n  const [lastQuarterStats, setLastQuarterStates] = useState(null);\r\n  const [lastYearStats, setLastYearStates] = useState(null);\r\n  const [loggedInUserStats, setLoggedInUserStats] = useState(null);\r\n  const [value, onChange] = useState(new Date());\r\n\r\n  const onMessageTypeChange = (type) => {\r\n    console.log(\"THis is message type etc\", type);\r\n    if (type === \"Tweets\") {\r\n      type = \"Twitter\";\r\n    }\r\n    setMessageType(type);\r\n    var filteredQueue = [];\r\n    if (selectedDateQueue != null) {\r\n      selectedDateQueueCopy.map((queue) => {\r\n        console.log(\"this is queue\", queue);\r\n        if (queue.platform && queue.platform.name == type) {\r\n          filteredQueue.push(queue);\r\n        }\r\n      });\r\n    }\r\n    if (type === \"All types\") {\r\n      console.log(\"IT is coming herer\", selectedDateQueueCopy);\r\n      setSelectedDateQueue(selectedDateQueueCopy);\r\n    } else {\r\n      setSelectedDateQueue(filteredQueue);\r\n    }\r\n  };\r\n\r\n  const onMessageSenderChange = (senderName) => {\r\n    console.log(\"THis is sender name\", senderName);\r\n    setMessageSender(senderName);\r\n    var filteredQueue = [];\r\n    if (selectedDateQueue != null) {\r\n      selectedDateQueueCopy.map((queue) => {\r\n        console.log(\"this is queue sender name\", queue);\r\n        if (\r\n          queue.queued_by.first_name + \" \" + queue.queued_by.last_name ===\r\n          senderName\r\n        ) {\r\n          filteredQueue.push(queue);\r\n        }\r\n      });\r\n    }\r\n    if (senderName === \"All Team Members\") {\r\n      console.log(\"IT is coming herer\", selectedDateQueueCopy);\r\n      setSelectedDateQueue(selectedDateQueueCopy);\r\n    } else {\r\n      setSelectedDateQueue(filteredQueue);\r\n    }\r\n  };\r\n\r\n  const onMessageStatusChange = (status) => {\r\n    console.log(\"THis is message type\", status);\r\n    setMessageStatus(status);\r\n    var filteredQueue = [];\r\n    if (selectedDateQueue != null) {\r\n      selectedDateQueueCopy.map((queue) => {\r\n        console.log(\"this is queue\", queue);\r\n        if (queue.status.toLowerCase() == status.toLowerCase()) {\r\n          filteredQueue.push(queue);\r\n        }\r\n      });\r\n    }\r\n    if (status === \"All status (Excluding Draft)\") {\r\n      console.log(\"IT is coming herer\", selectedDateQueueCopy);\r\n      setSelectedDateQueue(selectedDateQueueCopy);\r\n    } else {\r\n      setSelectedDateQueue(filteredQueue);\r\n    }\r\n  };\r\n\r\n  const [user, setUser] = useState(false);\r\n  const [queueDate, setQueueDate] = useState(new Date());\r\n  const handleChange = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  const getTaskQueueByDate = (date) => {\r\n    // setLoading(true);\r\n    console.log(\"This is the date\", date);\r\n    // || \"2020-12-13\"\r\n    getTaskQueueForDay(date).then(\r\n      (res) => {\r\n        // console.log(\"THis is takee queue res\", res);\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the task queue by date\", res.data);\r\n          var fileredQueue = [];\r\n\r\n          setSelectedDateQueue(res.data);\r\n          setSelectedDateQueueCopy(res.data);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error taks queue by date\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const myMonthlyStats = () => {\r\n    // || \"2020-12-13\"\r\n    getMonthlyStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the monthlly stats\", res.data.table);\r\n          setMontlyStats(res.data.table);\r\n          setBarchartData(res.data.table);\r\n          setDoughnutChatData(res.data.table);\r\n          setHomeRightStats(res.data.table);\r\n          res.data.table.users.map((user, index) => {\r\n            var name =\r\n              JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n              \" \" +\r\n              JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n            if (name === user.table.name) {\r\n              setLoggedInUserStats(user.table);\r\n            }\r\n          });\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n  const myQuarterlyStats = () => {\r\n    // || \"2020-12-13\"\r\n    getThisQuarterStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the quarterly stats\", res.data.table);\r\n          setQuarterlyStats(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n  const myYearlyStats = () => {\r\n    // || \"2020-12-13\"\r\n    getThisYearStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the yearly stats\", res.data.table);\r\n          setYearlyStats(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const myLastQuarterStats = () => {\r\n    // || \"2020-12-13\"\r\n    getLastQuarterStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the last quarter stats\", res.data.table);\r\n          setLastQuarterStates(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n  const myLastYearStats = () => {\r\n    // || \"2020-12-13\"\r\n    getLastYearStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the last year stats\", res.data.table);\r\n          setLastYearStates(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n  const myLastMonthStats = () => {\r\n    // || \"2020-12-13\"\r\n    getLastMonthStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the last month stats\", res.data.table);\r\n          setLastMonthStates(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const myLast30DaysStats = () => {\r\n    // || \"2020-12-13\"\r\n    getLast30Stats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the last 30 days stats\", res.data.table);\r\n          setLast30Stats(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  console.log(\r\n    \"This is todays of Quarter\",\r\n    new moment().format(\"YYYY-MM-DD\"),\r\n    \"This is 30 days back\",\r\n    new moment().clone().subtract({ days: 30 }).format(\"YYYY-MM-DD\")\r\n  );\r\n  if (localStorage.getItem(\"user\")) {\r\n  } else {\r\n    window.location.href = \"/\";\r\n  }\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\")) {\r\n      console.log(\"There is a user\");\r\n      setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n      // console.log(\"This is user\", JSON.parse(localStorage.getItem(\"user\")));\r\n      getTaskQueueByDate(null);\r\n      myMonthlyStats();\r\n      myQuarterlyStats();\r\n      myYearlyStats();\r\n      myLastQuarterStats();\r\n      myLastYearStats();\r\n      myLastMonthStats();\r\n      myLast30DaysStats();\r\n    } else {\r\n      window.location.href = \"/\";\r\n    }\r\n  }, []);\r\n\r\n  console.log(\"This is filter bar\", filterBar);\r\n  return (\r\n    <DashboardContainer>\r\n      <FilterModal\r\n        messageType={messageType}\r\n        setMessageType={onMessageTypeChange}\r\n        messageSender={messageSender}\r\n        setMessageSender={onMessageSenderChange}\r\n        messageStatus={messageStatus}\r\n        setMessageStatus={onMessageStatusChange}\r\n        filterOpen={filterOpen}\r\n        setFilterOpen={setFilterOpen}\r\n        monthlyStats={monthlyStats}\r\n      />\r\n      <Grid container style={{ margin: 0, padding: 0 }}>\r\n        <Grid item xs={12} lg={8}>\r\n          <Title>\r\n            <Titleheading>{`Welcome back ${\r\n              user.first_name + \" \" + user.last_name\r\n            }!`}</Titleheading>\r\n            <Titleparagrapg>\r\n              You have 15 unread messages in your RS Text Chat feed.{\" \"}\r\n              <span style={{ color: \"#3871DA\" }}>\r\n                <u>View Now</u>\r\n              </span>\r\n            </Titleparagrapg>\r\n          </Title>\r\n          <TableSection>\r\n            <Grid container style={{ margin: 0, padding: 0 }} direction>\r\n              <Grid item xs={12} lg={6}>\r\n                <TableHeaderCol1Heading>Team Queue</TableHeaderCol1Heading>\r\n                <TableHeaderCol2P>\r\n                  You have{\" \"}\r\n                  <span style={{ color: \"#3871DA\" }}>\r\n                    {selectedDateQueue ? selectedDateQueue.length : 0} items\r\n                  </span>{\" \"}\r\n                  in your queue\r\n                </TableHeaderCol2P>\r\n              </Grid>\r\n              <Grid item xs={12} lg={6}>\r\n                <TableHeaderRight>\r\n                  <DateField>\r\n                    <DatePicker\r\n                      onChange={(e) => {\r\n                        var dt = new moment(e).format(\"YYYY-MM-DD\");\r\n                        console.log(\"This is it\", dt);\r\n                        getTaskQueueByDate(dt);\r\n                        onChange(e);\r\n                      }}\r\n                      value={value}\r\n                    />\r\n                    {/* <input\r\n                      type=\"date\"\r\n                      onChange={(e) => {\r\n                        // setQueueDate(e.target.value);\r\n                        getTaskQueueByDate(e.target.value);\r\n                      }}\r\n                      // value={queueDate}\r\n                      InputProps={{ disableUnderline: true }}\r\n                      fullWidth={true}\r\n                      className=\"dateTextField\"\r\n                      // style={{ zIndex: 0, border: \"none\" }}\r\n                    /> */}\r\n                  </DateField>\r\n                  <FilterField\r\n                    onClick={() => setFilterOpen(true)}\r\n                    filterOpen={filterOpen}\r\n                  >\r\n                    <FilterText filterOpen={filterOpen}>Filter</FilterText>\r\n                    <FilterIcon filterOpen={filterOpen} />\r\n                  </FilterField>\r\n                </TableHeaderRight>\r\n              </Grid>\r\n            </Grid>\r\n            <Table\r\n              messageType={messageType}\r\n              messageStatus={messageStatus}\r\n              messageSender={messageSender}\r\n              selectedDateQueue={selectedDateQueue}\r\n            />\r\n            {selectedDateQueue == null || selectedDateQueue.length === 0 ? (\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                style={{ marginTop: -100 }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                    color: \"#74777c\",\r\n                    fontWeight: \"bold\",\r\n                    margin: 0,\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  Your task queue is clear!\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                    color: \"#74777c\",\r\n                    fontWeight: \"bold\",\r\n                    margin: 0,\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  Consistent messaging is key\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                    color: \"#74777c\",\r\n                    fontWeight: \"bold\",\r\n                    margin: 0,\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  to building an engaging audience!\r\n                </p>\r\n\r\n                <Button>+ New</Button>\r\n              </Grid>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            {selectedDateQueue == null || selectedDateQueue.length === 0 ? (\r\n              <div></div>\r\n            ) : (\r\n              <TableFooter style={{ borderTop: \"1px solid #dadada\" }}>\r\n                <TableFooterText style={{ marginTop: 12 }}>\r\n                  View More{\" \"}\r\n                  {selectedDateQueue && selectedDateQueue.length != 0\r\n                    ? `(${selectedDateQueue.length})`\r\n                    : \"\"}\r\n                </TableFooterText>\r\n              </TableFooter>\r\n            )}\r\n          </TableSection>\r\n\r\n          <ChartSection>\r\n            <Grid container style={{ margin: 0, padding: 0 }}>\r\n              <Grid item xs={12} lg={6}>\r\n                <ChartDiv>\r\n                  <ChartTop>\r\n                    <MM>\r\n                      <MMH>{currency} Messages</MMH>\r\n                      <MonthField>\r\n                        <DropdownButton\r\n                          id=\"dropdown-basic-button\"\r\n                          title={currency}\r\n                          drop={\"right\"}\r\n                        >\r\n                          {currencies.map((option) => (\r\n                            <Dropdown.Item\r\n                              style={{\r\n                                background:\r\n                                  currency === option.label\r\n                                    ? \"#348ef7\"\r\n                                    : \"white\",\r\n                                color:\r\n                                  currency === option.label ? \"white\" : \"black\",\r\n                              }}\r\n                              onClick={(e) => {\r\n                                if (option.label === \"This Quarter\") {\r\n                                  setDoughnutChatData(quarterlyStats);\r\n                                } else if (option.label === \"This Year\") {\r\n                                  setDoughnutChatData(yearlyStats);\r\n                                } else if (option.label === \"Last Quarter\") {\r\n                                  setDoughnutChatData(lastQuarterStats);\r\n                                } else if (option.label === \"Last Year\") {\r\n                                  setDoughnutChatData(lastYearStats);\r\n                                } else if (option.label === \"Last Month\") {\r\n                                  setDoughnutChatData(lastMonthStats);\r\n                                } else if (option.label === \"Last 30 Days\") {\r\n                                  setDoughnutChatData(last30Stats);\r\n                                } else {\r\n                                  setDoughnutChatData(monthlyStats);\r\n                                }\r\n                                setCurrency(option.label);\r\n                              }}\r\n                            >\r\n                              {option.label}\r\n                            </Dropdown.Item>\r\n                          ))}\r\n                        </DropdownButton>\r\n                      </MonthField>\r\n                    </MM>\r\n                    <Count>\r\n                      {doughnutChartData ? doughnutChartData.total_messages : 0}\r\n                    </Count>\r\n                  </ChartTop>\r\n                  <ChartDivS>\r\n                    {/* <Chart monthlyStats={monthlyStats} /> */}\r\n                    {doughnutChartData != null && (\r\n                      <DoughnutChart\r\n                        monthlyStats={doughnutChartData}\r\n                        // className=\"chart\"\r\n                        // data={[1, 2, 3, 4, 5, 6, 7]}\r\n                        // labels={[\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]}\r\n                      />\r\n                    )}\r\n                  </ChartDivS>\r\n\r\n                  <ChartFooter>\r\n                    <ChartFooterButton>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          height: \"12px\",\r\n                          color: \"#8BB14C\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>Personal Texts</ChartFooterContent>\r\n                    </ChartFooterButton>\r\n                    <ChartFooterButton2>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          color: \"#4f81bc\",\r\n                          height: \"12px\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>Total DM's</ChartFooterContent>\r\n                    </ChartFooterButton2>\r\n                    <ChartFooterButton3>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          height: \"12px\",\r\n                          color: \"#c0504e\",\r\n\r\n                          marginLeft: \"3px\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>RS Text</ChartFooterContent>\r\n                    </ChartFooterButton3>\r\n                  </ChartFooter>\r\n                </ChartDiv>\r\n              </Grid>\r\n              <Grid item xs={12} lg={6}>\r\n                <ChartDiv2>\r\n                  <ChartTop>\r\n                    <MM>\r\n                      <MMH>{filterBar} Messages</MMH>\r\n                      <MonthField>\r\n                        <DropdownButton\r\n                          id=\"dropdown-basic-button\"\r\n                          title={filterBar}\r\n                          drop={\"right\"}\r\n                        >\r\n                          {currencies.map((option) => (\r\n                            <Dropdown.Item\r\n                              style={{\r\n                                background:\r\n                                  filterBar === option.label\r\n                                    ? \"#348ef7\"\r\n                                    : \"white\",\r\n                                color:\r\n                                  filterBar === option.label\r\n                                    ? \"white\"\r\n                                    : \"black\",\r\n                              }}\r\n                              onClick={(e) => {\r\n                                if (option.label === \"This Quarter\") {\r\n                                  setBarchartData(quarterlyStats);\r\n                                } else if (option.label === \"This Year\") {\r\n                                  setBarchartData(yearlyStats);\r\n                                } else if (option.label === \"Last Quarter\") {\r\n                                  setBarchartData(lastQuarterStats);\r\n                                } else if (option.label === \"Last Year\") {\r\n                                  setBarchartData(lastYearStats);\r\n                                } else if (option.label === \"Last Month\") {\r\n                                  setBarchartData(lastMonthStats);\r\n                                } else if (option.label === \"Last 30 Days\") {\r\n                                  setBarchartData(last30Stats);\r\n                                } else {\r\n                                  setBarchartData(monthlyStats);\r\n                                }\r\n                                setFilterBar(option.label);\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              {option.label}\r\n                            </Dropdown.Item>\r\n                          ))}\r\n                        </DropdownButton>\r\n                      </MonthField>\r\n                    </MM>\r\n                    <Count>\r\n                      {barChartData ? barChartData.total_messages : 0}\r\n                    </Count>\r\n                  </ChartTop>\r\n\r\n                  <div>\r\n                    {barChartData && <Barchart monthlyStats={barChartData} />}\r\n                  </div>\r\n\r\n                  <ChartFooter>\r\n                    <ChartFooterButton>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          height: \"12px\",\r\n                          color: \"#0091FF\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>Twitter DM’s</ChartFooterContent>\r\n                    </ChartFooterButton>\r\n                    <ChartFooterButton2>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          height: \"12px\",\r\n                          color: \"#8BB14C\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>Personal Text</ChartFooterContent>\r\n                    </ChartFooterButton2>\r\n                    <ChartFooterButton3>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          height: \"12px\",\r\n                          color: \"#373D4A\",\r\n                          marginLeft: \"3px\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>RS Text</ChartFooterContent>\r\n                    </ChartFooterButton3>\r\n                  </ChartFooter>\r\n                </ChartDiv2>\r\n              </Grid>\r\n            </Grid>\r\n          </ChartSection>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4}>\r\n          <HomeRight\r\n            user={user && user}\r\n            loggedInUserStats={loggedInUserStats}\r\n            monthlyStats={homeRightStats && homeRightStats}\r\n            onFilterChange={(filter) => {\r\n              if (filter === \"This Quarter\") {\r\n                quarterlyStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n\r\n                setHomeRightStats(quarterlyStats);\r\n              } else if (filter === \"This Year\") {\r\n                yearlyStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(yearlyStats);\r\n              } else if (filter === \"Last Quarter\") {\r\n                lastQuarterStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(lastQuarterStats);\r\n              } else if (filter === \"Last Year\") {\r\n                lastYearStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(lastYearStats);\r\n              } else if (filter === \"Last Month\") {\r\n                lastMonthStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(lastMonthStats);\r\n              } else if (filter === \"Last 30 Days\") {\r\n                last30Stats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(last30Stats);\r\n              } else {\r\n                monthlyStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(monthlyStats);\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </DashboardContainer>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n",["157","158"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\index.js",["159","160","161"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\model.js",["162"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\chart.js",["163","164"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\table.js",["165","166","167","168","169","170"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeElements.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\filterModal.js",["171","172","173","174","175"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\barChart.js",[],["176","177"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeRight.js",["178","179","180","181","182","183","184","185","186","187"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\signupElements.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\form.js",["188","189","190","191","192","193"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeElementsRight.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\canvaJS\\canvasjs.react.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\checkbox.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\canvaJS\\canvasjs.min.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\ApiHelper.js",["194"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\charts\\Doughnut.jsx",["195"],"import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default class Doughnut extends React.Component {\r\n  componentDidMount() {\r\n    var ctx = document.getElementById(\"myChart3\");\r\n    this.myChart = new Chart(ctx, {\r\n      type: \"doughnut\",\r\n      data: {\r\n        labels: [\"Recruite Messages\", \"Personal texts\", \"Total DM's\"],\r\n        datasets: [\r\n          {\r\n            data: [\r\n              this.props.monthlyStats.total_recruits_messaged,\r\n\r\n              this.props.monthlyStats.total_personal_texts,\r\n              this.props.monthlyStats.total_dms,\r\n            ],\r\n            label: \"Trends\",\r\n            lineTension: 0,\r\n            fill: false,\r\n            backgroundColor: \"#19a5d3\",\r\n            backgroundColor: [\"#c0504e\", \"#8bb14c\", \"#4f81bc\"],\r\n            hoverBackgroundColor: \"#26a69a\",\r\n          },\r\n\r\n          // {\r\n          //   label: \"Recruite Messages\",\r\n          //   data: this.props.monthlyStats\r\n          //     ? this.props.monthlyStats.total_recruits_messaged\r\n          //     : 0,\r\n          //   lineTension: 0,\r\n          //   fill: false,\r\n          //   backgroundColor: \"#19a5d3\",\r\n          //   hoverBackgroundColor: \"#26a69a\",\r\n          // },\r\n          // {\r\n          //   label: \"Personal texts\",\r\n          //   data: this.props.monthlyStats\r\n          //     ? this.props.monthlyStats.total_personal_texts\r\n          //     : 0,\r\n          //   lineTension: 0,\r\n          //   fill: false,\r\n          //   backgroundColor: \"#19a5d3\",\r\n          //   hoverBackgroundColor: \"#26a69a\",\r\n          // },\r\n          // {\r\n          //   label: \"Total DM's\",\r\n          //   data: this.props.monthlyStats\r\n          //     ? this.props.monthlyStats.total_dms\r\n          //     : 0,\r\n          //   lineTension: 0,\r\n          //   fill: false,\r\n          //   backgroundColor: \"#19a5d3\",\r\n          //   hoverBackgroundColor: \"#26a69a\",\r\n          // },\r\n        ],\r\n      },\r\n      options: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        tooltips: {\r\n          borderColor: \"#202020\",\r\n          borderWidth: 2,\r\n          backgroundColor: \"#fafafa\",\r\n          cornerRadius: 2,\r\n          yPadding: 10,\r\n          bodyFontColor: \"#0f0f0f\",\r\n        },\r\n      },\r\n    });\r\n    // console.log(\"this is coming here\");\r\n  }\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   this.myChart.data.datasets[0].data = nextProps.data;\r\n  //   this.myChart.update();\r\n  // }\r\n  render() {\r\n    var data = [\r\n      this.props.monthlyStats.total_recruits_messaged,\r\n\r\n      this.props.monthlyStats.total_personal_texts,\r\n      this.props.monthlyStats.total_dms,\r\n    ];\r\n    if (this.myChart) {\r\n      this.myChart.data.datasets[0].data = data;\r\n      this.myChart.update();\r\n    }\r\n    return (\r\n      <canvas\r\n        className={this.props.className}\r\n        id=\"myChart3\"\r\n        width=\"1160\"\r\n        height=\"500\"\r\n      ></canvas>\r\n    );\r\n  }\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\charts\\BarChart.jsx",["196"],"import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default class ListingChart extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.myChart = null;\r\n  }\r\n  componentDidMount() {\r\n    var ctx = document.getElementById(\"myChart2\");\r\n    var lbl = [];\r\n    var ds = [];\r\n\r\n    const data =\r\n      this.props.monthlyStats &&\r\n      this.props.monthlyStats.total_messages_by_period;\r\n    if (data) {\r\n      for (var i = 0; i < data.length; i++) {\r\n        lbl.push(data[i][0]);\r\n        ds.push(data[i][1]);\r\n      }\r\n    }\r\n\r\n    this.myChart = new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: lbl,\r\n        datasets: [\r\n          {\r\n            data: ds,\r\n            label: \"Trends\",\r\n            lineTension: 0,\r\n            fill: false,\r\n            backgroundColor: \"#19a5d3\",\r\n            hoverBackgroundColor: \"#26a69a\",\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scaleStartValue: 0,\r\n        legend: {\r\n          display: false,\r\n        },\r\n        tooltips: {\r\n          borderColor: \"#202020\",\r\n          borderWidth: 2,\r\n          backgroundColor: \"#fafafa\",\r\n          cornerRadius: 2,\r\n          yPadding: 10,\r\n          bodyFontColor: \"#0f0f0f\",\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              display: false,\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n              ticks: {\r\n                display: false,\r\n                maxTicksLimit: 7,\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          ],\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n              categoryPercentage: 1.0,\r\n              barPercentage: 0.7,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n    // console.log(\"this is coming here\", lbl);\r\n  }\r\n\r\n  render() {\r\n    var lbl = [];\r\n    var ds = [];\r\n    const data =\r\n      this.props.monthlyStats &&\r\n      this.props.monthlyStats.total_messages_by_period;\r\n    if (data) {\r\n      for (var i = 0; i < data.length; i++) {\r\n        lbl.push(data[i][0]);\r\n        ds.push(data[i][1]);\r\n      }\r\n    }\r\n    var dataSets = [\r\n      {\r\n        data: ds,\r\n        label: \"Trends\",\r\n        lineTension: 0,\r\n        fill: false,\r\n        backgroundColor: \"#19a5d3\",\r\n        hoverBackgroundColor: \"#26a69a\",\r\n      },\r\n    ];\r\n    if (this.myChart) {\r\n      this.myChart.data.datasets[0].data = ds;\r\n      this.myChart.data.labels = lbl;\r\n      this.myChart.update();\r\n    }\r\n\r\n    // console.log(\"this is coming here in render\", lbl);\r\n    return (\r\n      <canvas\r\n        className={this.props.className}\r\n        id=\"myChart2\"\r\n        width=\"1160\"\r\n        height=\"500\"\r\n      ></canvas>\r\n    );\r\n  }\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\Pages\\Contacts.js",["197","198"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\sidebar.js",["199","200","201","202","203","204","205","206","207"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\sidebarData.js",["208","209","210"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\globalStyle.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\subMenu.js",["211"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\Contacts\\index.js",["212","213","214"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Elements\\Elements.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Fields\\IconTextField.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Buttons\\IconButton.js",[],{"ruleId":"215","severity":1,"message":"216","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"219","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":15},{"ruleId":"215","severity":1,"message":"220","line":6,"column":10,"nodeType":"217","messageId":"218","endLine":6,"endColumn":19},{"ruleId":"215","severity":1,"message":"221","line":8,"column":9,"nodeType":"217","messageId":"218","endLine":8,"endColumn":18},{"ruleId":"215","severity":1,"message":"222","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":17},{"ruleId":"215","severity":1,"message":"223","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":13},{"ruleId":"215","severity":1,"message":"224","line":7,"column":8,"nodeType":"217","messageId":"218","endLine":7,"endColumn":29},{"ruleId":"215","severity":1,"message":"225","line":9,"column":10,"nodeType":"217","messageId":"218","endLine":9,"endColumn":14},{"ruleId":"215","severity":1,"message":"226","line":39,"column":3,"nodeType":"217","messageId":"218","endLine":39,"endColumn":12},{"ruleId":"215","severity":1,"message":"227","line":42,"column":8,"nodeType":"217","messageId":"218","endLine":42,"endColumn":16},{"ruleId":"215","severity":1,"message":"228","line":141,"column":9,"nodeType":"217","messageId":"218","endLine":141,"endColumn":16},{"ruleId":"229","severity":1,"message":"230","line":175,"column":41,"nodeType":"231","messageId":"232","endLine":175,"endColumn":43},{"ruleId":"233","severity":1,"message":"234","line":177,"column":51,"nodeType":"235","messageId":"236","endLine":177,"endColumn":53},{"ruleId":"229","severity":1,"message":"230","line":195,"column":41,"nodeType":"231","messageId":"232","endLine":195,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":218,"column":41,"nodeType":"231","messageId":"232","endLine":218,"endColumn":43},{"ruleId":"233","severity":1,"message":"234","line":220,"column":40,"nodeType":"235","messageId":"236","endLine":220,"endColumn":42},{"ruleId":"215","severity":1,"message":"237","line":234,"column":10,"nodeType":"217","messageId":"218","endLine":234,"endColumn":19},{"ruleId":"215","severity":1,"message":"238","line":234,"column":21,"nodeType":"217","messageId":"218","endLine":234,"endColumn":33},{"ruleId":"215","severity":1,"message":"239","line":235,"column":9,"nodeType":"217","messageId":"218","endLine":235,"endColumn":21},{"ruleId":"215","severity":1,"message":"240","line":248,"column":15,"nodeType":"217","messageId":"218","endLine":248,"endColumn":27},{"ruleId":"229","severity":1,"message":"230","line":270,"column":50,"nodeType":"231","messageId":"232","endLine":270,"endColumn":52},{"ruleId":"233","severity":1,"message":"241","line":536,"column":66,"nodeType":"235","messageId":"236","endLine":536,"endColumn":68},{"ruleId":"229","severity":1,"message":"230","line":747,"column":56,"nodeType":"231","messageId":"232","endLine":747,"endColumn":58},{"ruleId":"229","severity":1,"message":"230","line":759,"column":53,"nodeType":"231","messageId":"232","endLine":759,"endColumn":55},{"ruleId":"229","severity":1,"message":"230","line":770,"column":58,"nodeType":"231","messageId":"232","endLine":770,"endColumn":60},{"ruleId":"229","severity":1,"message":"230","line":781,"column":55,"nodeType":"231","messageId":"232","endLine":781,"endColumn":57},{"ruleId":"229","severity":1,"message":"230","line":792,"column":56,"nodeType":"231","messageId":"232","endLine":792,"endColumn":58},{"ruleId":"229","severity":1,"message":"230","line":803,"column":53,"nodeType":"231","messageId":"232","endLine":803,"endColumn":55},{"ruleId":"229","severity":1,"message":"230","line":814,"column":54,"nodeType":"231","messageId":"232","endLine":814,"endColumn":56},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"215","severity":1,"message":"246","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":16},{"ruleId":"215","severity":1,"message":"247","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":25},{"ruleId":"215","severity":1,"message":"248","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":16},{"ruleId":"215","severity":1,"message":"249","line":6,"column":10,"nodeType":"217","messageId":"218","endLine":6,"endColumn":14},{"ruleId":"215","severity":1,"message":"250","line":3,"column":5,"nodeType":"217","messageId":"218","endLine":3,"endColumn":14},{"ruleId":"215","severity":1,"message":"251","line":4,"column":5,"nodeType":"217","messageId":"218","endLine":4,"endColumn":13},{"ruleId":"215","severity":1,"message":"252","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":13},{"ruleId":"215","severity":1,"message":"253","line":22,"column":7,"nodeType":"217","messageId":"218","endLine":22,"endColumn":11},{"ruleId":"233","severity":1,"message":"241","line":46,"column":72,"nodeType":"235","messageId":"236","endLine":46,"endColumn":74},{"ruleId":"233","severity":1,"message":"241","line":103,"column":42,"nodeType":"235","messageId":"236","endLine":103,"endColumn":44},{"ruleId":"233","severity":1,"message":"234","line":117,"column":44,"nodeType":"235","messageId":"236","endLine":117,"endColumn":46},{"ruleId":"233","severity":1,"message":"234","line":183,"column":40,"nodeType":"235","messageId":"236","endLine":183,"endColumn":42},{"ruleId":"215","severity":1,"message":"254","line":41,"column":7,"nodeType":"217","messageId":"218","endLine":41,"endColumn":23},{"ruleId":"215","severity":1,"message":"255","line":85,"column":9,"nodeType":"217","messageId":"218","endLine":85,"endColumn":22},{"ruleId":"229","severity":1,"message":"256","line":188,"column":66,"nodeType":"231","messageId":"257","endLine":188,"endColumn":68},{"ruleId":"233","severity":1,"message":"241","line":208,"column":40,"nodeType":"235","messageId":"236","endLine":208,"endColumn":42},{"ruleId":"233","severity":1,"message":"241","line":210,"column":78,"nodeType":"235","messageId":"236","endLine":210,"endColumn":80},{"ruleId":"242","replacedBy":"258"},{"ruleId":"244","replacedBy":"259"},{"ruleId":"215","severity":1,"message":"260","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"261","line":30,"column":8,"nodeType":"217","messageId":"218","endLine":30,"endColumn":11},{"ruleId":"215","severity":1,"message":"227","line":33,"column":8,"nodeType":"217","messageId":"218","endLine":33,"endColumn":16},{"ruleId":"215","severity":1,"message":"222","line":34,"column":8,"nodeType":"217","messageId":"218","endLine":34,"endColumn":17},{"ruleId":"215","severity":1,"message":"224","line":37,"column":8,"nodeType":"217","messageId":"218","endLine":37,"endColumn":29},{"ruleId":"215","severity":1,"message":"228","line":92,"column":9,"nodeType":"217","messageId":"218","endLine":92,"endColumn":16},{"ruleId":"215","severity":1,"message":"262","line":94,"column":10,"nodeType":"217","messageId":"218","endLine":94,"endColumn":14},{"ruleId":"215","severity":1,"message":"263","line":94,"column":16,"nodeType":"217","messageId":"218","endLine":94,"endColumn":23},{"ruleId":"215","severity":1,"message":"239","line":97,"column":9,"nodeType":"217","messageId":"218","endLine":97,"endColumn":21},{"ruleId":"229","severity":1,"message":"256","line":206,"column":43,"nodeType":"231","messageId":"257","endLine":206,"endColumn":45},{"ruleId":"215","severity":1,"message":"264","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":7},{"ruleId":"215","severity":1,"message":"265","line":15,"column":3,"nodeType":"217","messageId":"218","endLine":15,"endColumn":7},{"ruleId":"233","severity":1,"message":"241","line":191,"column":31,"nodeType":"235","messageId":"236","endLine":191,"endColumn":33},{"ruleId":"233","severity":1,"message":"241","line":191,"column":49,"nodeType":"235","messageId":"236","endLine":191,"endColumn":51},{"ruleId":"233","severity":1,"message":"241","line":207,"column":31,"nodeType":"235","messageId":"236","endLine":207,"endColumn":33},{"ruleId":"233","severity":1,"message":"241","line":207,"column":49,"nodeType":"235","messageId":"236","endLine":207,"endColumn":51},{"ruleId":"215","severity":1,"message":"266","line":158,"column":7,"nodeType":"217","messageId":"218","endLine":158,"endColumn":27},{"ruleId":"267","severity":1,"message":"268","line":23,"column":13,"nodeType":"269","messageId":"236","endLine":23,"endColumn":28},{"ruleId":"215","severity":1,"message":"270","line":93,"column":9,"nodeType":"217","messageId":"218","endLine":93,"endColumn":17},{"ruleId":"215","severity":1,"message":"220","line":6,"column":10,"nodeType":"217","messageId":"218","endLine":6,"endColumn":19},{"ruleId":"215","severity":1,"message":"221","line":8,"column":9,"nodeType":"217","messageId":"218","endLine":8,"endColumn":18},{"ruleId":"215","severity":1,"message":"271","line":11,"column":10,"nodeType":"217","messageId":"218","endLine":11,"endColumn":35},{"ruleId":"215","severity":1,"message":"272","line":12,"column":8,"nodeType":"217","messageId":"218","endLine":12,"endColumn":17},{"ruleId":"215","severity":1,"message":"273","line":15,"column":10,"nodeType":"217","messageId":"218","endLine":15,"endColumn":21},{"ruleId":"215","severity":1,"message":"274","line":18,"column":8,"nodeType":"217","messageId":"218","endLine":18,"endColumn":25},{"ruleId":"215","severity":1,"message":"275","line":52,"column":7,"nodeType":"217","messageId":"218","endLine":52,"endColumn":14},{"ruleId":"215","severity":1,"message":"276","line":172,"column":7,"nodeType":"217","messageId":"218","endLine":172,"endColumn":23},{"ruleId":"215","severity":1,"message":"277","line":174,"column":7,"nodeType":"217","messageId":"218","endLine":174,"endColumn":18},{"ruleId":"215","severity":1,"message":"278","line":186,"column":9,"nodeType":"217","messageId":"218","endLine":186,"endColumn":16},{"ruleId":"279","severity":1,"message":"280","line":322,"column":19,"nodeType":"281","endLine":328,"endColumn":20},{"ruleId":"215","severity":1,"message":"282","line":2,"column":13,"nodeType":"217","messageId":"218","endLine":2,"endColumn":20},{"ruleId":"215","severity":1,"message":"283","line":3,"column":13,"nodeType":"217","messageId":"218","endLine":3,"endColumn":20},{"ruleId":"215","severity":1,"message":"284","line":4,"column":13,"nodeType":"217","messageId":"218","endLine":4,"endColumn":20},{"ruleId":"215","severity":1,"message":"285","line":56,"column":7,"nodeType":"217","messageId":"218","endLine":56,"endColumn":14},{"ruleId":"215","severity":1,"message":"286","line":14,"column":8,"nodeType":"217","messageId":"218","endLine":14,"endColumn":14},{"ruleId":"215","severity":1,"message":"287","line":60,"column":21,"nodeType":"217","messageId":"218","endLine":60,"endColumn":33},{"ruleId":"279","severity":1,"message":"280","line":321,"column":21,"nodeType":"281","endLine":324,"endColumn":22},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'showModal' is assigned a value but never used.","'openModal' is assigned a value but never used.","'TextField' is defined but never used.","'Chart' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'Link' is defined but never used.","'ChartTop2' is defined but never used.","'MenuItem' is defined but never used.","'classes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'queueDate' is assigned a value but never used.","'setQueueDate' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'fileredQueue' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-native-reassign",["288"],"no-negated-in-lhs",["289"],"'Privacypolicy' is defined but never used.","'PrivacypolicyContainer' is defined but never used.","'VertivalSpace' is defined but never used.","'Grid' is defined but never used.","'Component' is assigned a value but never used.","'CanvasJS' is assigned a value but never used.","'Paper' is defined but never used.","'rows' is assigned a value but never used.","'ListTopContainer' is assigned a value but never used.","'messageSender' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["288"],["289"],"'useEffect' is defined but never used.","'Ex1' is defined but never used.","'rank' is assigned a value but never used.","'setRank' is assigned a value but never used.","'Icon' is defined but never used.","'Text' is defined but never used.","'lastQuarterStartDate' is assigned a value but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","'dataSets' is assigned a value but never used.","'IoIosNotificationsOutline' is defined but never used.","'ForumIcon' is defined but never used.","'GlobalStyle' is defined but never used.","'ForumOutlinedIcon' is defined but never used.","'NavIcon' is assigned a value but never used.","'NotificationIcon' is assigned a value but never used.","'HeaderIcons' is assigned a value but never used.","'setOpen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'IoIcons' is defined but never used.","'ImgIcon' is assigned a value but never used.","'styled' is defined but never used.","'setFilterBar' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]