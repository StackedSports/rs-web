[{"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\index.js":"1","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\App.js":"2","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\index.js":"3","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\Home.js":"4","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\index.js":"5","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\model.js":"6","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\chart.js":"7","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\table.js":"8","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeElements.js":"9","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\filterModal.js":"10","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\barChart.js":"11","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeRight.js":"12","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\signupElements.js":"13","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\form.js":"14","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeElementsRight.js":"15","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\canvaJS\\canvasjs.react.js":"16","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\checkbox.js":"17","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\canvaJS\\canvasjs.min.js":"18","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\ApiHelper.js":"19","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\charts\\Doughnut.jsx":"20","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\charts\\BarChart.jsx":"21","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\Pages\\Contacts.js":"22","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\sidebar.js":"23","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\sidebarData.js":"24","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\globalStyle.js":"25","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\subMenu.js":"26","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\Contacts\\index.js":"27","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Elements\\Elements.js":"28","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Fields\\IconTextField.js":"29","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Buttons\\IconButton.js":"30"},{"size":230,"mtime":1610015307888,"results":"31","hashOfConfig":"32"},{"size":739,"mtime":1611745589521,"results":"33","hashOfConfig":"32"},{"size":392,"mtime":1611745841602,"results":"34","hashOfConfig":"32"},{"size":29436,"mtime":1611747102181,"results":"35","hashOfConfig":"32"},{"size":627,"mtime":1610015307876,"results":"36","hashOfConfig":"32"},{"size":3197,"mtime":1610544265580,"results":"37","hashOfConfig":"32"},{"size":1307,"mtime":1610539485516,"results":"38","hashOfConfig":"32"},{"size":9206,"mtime":1611574597603,"results":"39","hashOfConfig":"32"},{"size":6441,"mtime":1611142065308,"results":"40","hashOfConfig":"32"},{"size":10561,"mtime":1611146602992,"results":"41","hashOfConfig":"32"},{"size":1366,"mtime":1610957303716,"results":"42","hashOfConfig":"43"},{"size":7098,"mtime":1611572033347,"results":"44","hashOfConfig":"32"},{"size":5448,"mtime":1610015307876,"results":"45","hashOfConfig":"32"},{"size":8044,"mtime":1610026608573,"results":"46","hashOfConfig":"32"},{"size":4153,"mtime":1611575727312,"results":"47","hashOfConfig":"32"},{"size":1782,"mtime":1610015307867,"results":"48","hashOfConfig":"32"},{"size":1405,"mtime":1610015307876,"results":"49","hashOfConfig":"32"},{"size":460150,"mtime":1610015307866,"results":"50","hashOfConfig":"32"},{"size":10721,"mtime":1611569167362,"results":"51","hashOfConfig":"32"},{"size":2934,"mtime":1611568673446,"results":"52","hashOfConfig":"32"},{"size":2791,"mtime":1611568676158,"results":"53","hashOfConfig":"32"},{"size":463,"mtime":1611755406325,"results":"54","hashOfConfig":"32"},{"size":9224,"mtime":1611758910245,"results":"55","hashOfConfig":"32"},{"size":2789,"mtime":1611756318026,"results":"56","hashOfConfig":"32"},{"size":127,"mtime":1610015307874,"results":"57","hashOfConfig":"32"},{"size":2098,"mtime":1611756360530,"results":"58","hashOfConfig":"32"},{"size":19921,"mtime":1611940731313,"results":"59","hashOfConfig":"32"},{"size":832,"mtime":1611747963489,"results":"60","hashOfConfig":"32"},{"size":886,"mtime":1611926995954,"results":"61","hashOfConfig":"32"},{"size":773,"mtime":1611752753567,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1kazu1w",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1yymdav",{"filePath":"95","messages":"96","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"65"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"65"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"65"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\index.js",[],["142","143"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\App.js",["144"],"import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Signup from \"./components/signup\";\r\nimport Dashboard from \"./components/dashboard/index\";\r\nimport Contacts from \"./Pages/Contacts\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"body\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Signup} />\r\n          <Route path=\"/dashboard\" exact component={Dashboard} />\r\n          <Route path=\"/contacts\" exact component={Contacts} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\index.js",["145","146","147"],"import React, { useState } from \"react\";\r\nimport Sidebar from \"../common/sidebar/sidebar\";\r\nimport Home from \"./Home\";\r\nimport { Modal } from \"./model\";\r\nexport default function Dashboard() {\r\n  const [showModal, setShowModal] = useState(true);\r\n\r\n  const openModal = () => {\r\n    setShowModal((prev) => !prev);\r\n  };\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      <Home />\r\n    </>\r\n  );\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\Home.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Chart from \"./chart\";\r\nimport styled from \"styled-components\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  DashboardContainer,\r\n  Title,\r\n  Titleheading,\r\n  Titleparagrapg,\r\n  TableSection,\r\n  TableHeaderCol1Heading,\r\n  TableHeaderCol2P,\r\n  TableHeaderRight,\r\n  DateField,\r\n  FilterField,\r\n  FilterIcon,\r\n  FilterText,\r\n  TableFooter,\r\n  TableFooterText,\r\n  ChartSection,\r\n  ChartDiv,\r\n  ChartDiv2,\r\n  ChartTop,\r\n  MM,\r\n  MMH,\r\n  MonthField,\r\n  Count,\r\n  ChartFooter,\r\n  ChartFooterButton,\r\n  ChartFooterContent,\r\n  ChartFooterButton2,\r\n  ChartFooterButton3,\r\n  ChartDivS,\r\n  ChartTop2,\r\n} from \"./homeElements\";\r\nimport Table from \"./table\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport HomeRight from \"./homeRight\";\r\n// import Barchart from \"./barChart\";\r\nimport FilterModal from \"./filterModal\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport Barchart from \"../charts/BarChart\";\r\nimport DoughnutChart from \"../charts/Doughnut\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  getTaskQueueForDay,\r\n  getMonthlyStats,\r\n  getThisQuarterStats,\r\n  getThisYearStats,\r\n  getLastQuarterStats,\r\n  getLastYearStats,\r\n  getLastMonthStats,\r\n  getLast30Stats,\r\n} from \"../../ApiHelper\";\r\n\r\nconst Button = styled.button`\r\n  border-radius: 5px;\r\n  background: #3871da;\r\n  white-space: nowrap;\r\n  padding: 0.5rem;\r\n  width: 150px;\r\n  margin: 20px;\r\n  margin-bottom: 10px;\r\n  box-sizing: border-box;\r\n  font-weight: bold;\r\n  color: white;\r\n  font-size: 14px;\r\n  outtion: all 0.2s ease-in-out;\r\n  @medialine: none;\r\n  border: none;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  text-decoration: none;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transi screen and (max-width: 1000px) {\r\n    width: 180px;\r\n  }\r\n`;\r\n\r\nconst currencies = [\r\n  {\r\n    value: \"1\",\r\n    label: \"Last 30 Days\",\r\n  },\r\n  {\r\n    value: \"2\",\r\n    label: \"This Month\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"This Quarter\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"This Year\",\r\n  },\r\n  {\r\n    value: \"5\",\r\n    label: \"Last Month\",\r\n  },\r\n  {\r\n    value: \"6\",\r\n    label: \"Last Quarter\",\r\n  },\r\n  {\r\n    value: \"7\",\r\n    label: \"Last Year\",\r\n  },\r\n];\r\nconst useStyles = makeStyles({\r\n  underline: {\r\n    \"&&&:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"&&:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  icon: {\r\n    color: \"red\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  input: {\r\n    color: \"#222222\",\r\n    fontSize: 12,\r\n    background: \"transparent\",\r\n    fontFamily: \"ProximaNovaSemibold\",\r\n  },\r\n});\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  // console.log(\"This is logged in user\", localStorage.getItem(\"user\"));\r\n  const [currency, setCurrency] = useState(\"This Month\");\r\n  const [filterBar, setFilterBar] = useState(\"This Month\");\r\n  const [selectedDateQueue, setSelectedDateQueue] = useState(null);\r\n  const [selectedDateQueueCopy, setSelectedDateQueueCopy] = useState(null);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [messageType, setMessageType] = useState(\"All types\");\r\n  const [messageSender, setMessageSender] = useState(\"All Team Members\");\r\n  const [messageStatus, setMessageStatus] = useState(\r\n    \"All status (Excluding Draft)\"\r\n  );\r\n\r\n  const [barChartData, setBarchartData] = useState(null);\r\n  const [doughnutChartData, setDoughnutChatData] = useState(null);\r\n  const [monthlyStats, setMontlyStats] = useState(null);\r\n  const [quarterlyStats, setQuarterlyStats] = useState(null);\r\n  const [yearlyStats, setYearlyStats] = useState(null);\r\n  const [lastMonthStats, setLastMonthStates] = useState(null);\r\n  const [last30Stats, setLast30Stats] = useState(null);\r\n  const [homeRightStats, setHomeRightStats] = useState(null);\r\n  const [lastQuarterStats, setLastQuarterStates] = useState(null);\r\n  const [lastYearStats, setLastYearStates] = useState(null);\r\n  const [loggedInUserStats, setLoggedInUserStats] = useState(null);\r\n  const [value, onChange] = useState(new Date());\r\n\r\n  const onMessageTypeChange = (type) => {\r\n    console.log(\"THis is message type etc\", type);\r\n    if (type === \"Tweets\") {\r\n      type = \"Twitter\";\r\n    }\r\n    setMessageType(type);\r\n    var filteredQueue = [];\r\n    if (selectedDateQueue != null) {\r\n      selectedDateQueueCopy.map((queue) => {\r\n        console.log(\"this is queue\", queue);\r\n        if (queue.platform && queue.platform.name == type) {\r\n          filteredQueue.push(queue);\r\n        }\r\n      });\r\n    }\r\n    if (type === \"All types\") {\r\n      console.log(\"IT is coming herer\", selectedDateQueueCopy);\r\n      setSelectedDateQueue(selectedDateQueueCopy);\r\n    } else {\r\n      setSelectedDateQueue(filteredQueue);\r\n    }\r\n  };\r\n\r\n  const onMessageSenderChange = (senderName) => {\r\n    console.log(\"THis is sender name\", senderName);\r\n    setMessageSender(senderName);\r\n    var filteredQueue = [];\r\n    if (selectedDateQueue != null) {\r\n      selectedDateQueueCopy.map((queue) => {\r\n        console.log(\"this is queue sender name\", queue);\r\n        if (\r\n          queue.queued_by.first_name + \" \" + queue.queued_by.last_name ===\r\n          senderName\r\n        ) {\r\n          filteredQueue.push(queue);\r\n        }\r\n      });\r\n    }\r\n    if (senderName === \"All Team Members\") {\r\n      console.log(\"IT is coming herer\", selectedDateQueueCopy);\r\n      setSelectedDateQueue(selectedDateQueueCopy);\r\n    } else {\r\n      setSelectedDateQueue(filteredQueue);\r\n    }\r\n  };\r\n\r\n  const onMessageStatusChange = (status) => {\r\n    console.log(\"THis is message type\", status);\r\n    setMessageStatus(status);\r\n    var filteredQueue = [];\r\n    if (selectedDateQueue != null) {\r\n      selectedDateQueueCopy.map((queue) => {\r\n        console.log(\"this is queue\", queue);\r\n        if (queue.status.toLowerCase() == status.toLowerCase()) {\r\n          filteredQueue.push(queue);\r\n        }\r\n      });\r\n    }\r\n    if (status === \"All status (Excluding Draft)\") {\r\n      console.log(\"IT is coming herer\", selectedDateQueueCopy);\r\n      setSelectedDateQueue(selectedDateQueueCopy);\r\n    } else {\r\n      setSelectedDateQueue(filteredQueue);\r\n    }\r\n  };\r\n\r\n  const [user, setUser] = useState(false);\r\n  const [queueDate, setQueueDate] = useState(new Date());\r\n  const handleChange = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  const getTaskQueueByDate = (date) => {\r\n    // setLoading(true);\r\n    console.log(\"This is the date\", date);\r\n    // || \"2020-12-13\"\r\n    getTaskQueueForDay(date).then(\r\n      (res) => {\r\n        // console.log(\"THis is takee queue res\", res);\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the task queue by date\", res.data);\r\n          var fileredQueue = [];\r\n\r\n          setSelectedDateQueue(res.data);\r\n          setSelectedDateQueueCopy(res.data);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error taks queue by date\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const myMonthlyStats = () => {\r\n    // || \"2020-12-13\"\r\n    getMonthlyStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the monthlly stats\", res.data.table);\r\n          setMontlyStats(res.data.table);\r\n          setBarchartData(res.data.table);\r\n          setDoughnutChatData(res.data.table);\r\n          setHomeRightStats(res.data.table);\r\n          res.data.table.users.map((user, index) => {\r\n            var name =\r\n              JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n              \" \" +\r\n              JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n            if (name === user.table.name) {\r\n              setLoggedInUserStats(user.table);\r\n            }\r\n          });\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n  const myQuarterlyStats = () => {\r\n    // || \"2020-12-13\"\r\n    getThisQuarterStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the quarterly stats\", res.data.table);\r\n          setQuarterlyStats(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n  const myYearlyStats = () => {\r\n    // || \"2020-12-13\"\r\n    getThisYearStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the yearly stats\", res.data.table);\r\n          setYearlyStats(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const myLastQuarterStats = () => {\r\n    // || \"2020-12-13\"\r\n    getLastQuarterStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the last quarter stats\", res.data.table);\r\n          setLastQuarterStates(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n  const myLastYearStats = () => {\r\n    // || \"2020-12-13\"\r\n    getLastYearStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the last year stats\", res.data.table);\r\n          setLastYearStates(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n  const myLastMonthStats = () => {\r\n    // || \"2020-12-13\"\r\n    getLastMonthStats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the last month stats\", res.data.table);\r\n          setLastMonthStates(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const myLast30DaysStats = () => {\r\n    // || \"2020-12-13\"\r\n    getLast30Stats().then(\r\n      (res) => {\r\n        if (res.statusText === \"OK\") {\r\n          console.log(\"This is the last 30 days stats\", res.data.table);\r\n          setLast30Stats(res.data.table);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error in the stats\", error);\r\n      }\r\n    );\r\n  };\r\n\r\n  console.log(\r\n    \"This is todays of Quarter\",\r\n    new moment().format(\"YYYY-MM-DD\"),\r\n    \"This is 30 days back\",\r\n    new moment().clone().subtract({ days: 30 }).format(\"YYYY-MM-DD\")\r\n  );\r\n  if (localStorage.getItem(\"user\")) {\r\n  } else {\r\n    window.location.href = \"/\";\r\n  }\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\")) {\r\n      console.log(\"There is a user\");\r\n      setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n      // console.log(\"This is user\", JSON.parse(localStorage.getItem(\"user\")));\r\n      getTaskQueueByDate(null);\r\n      myMonthlyStats();\r\n      myQuarterlyStats();\r\n      myYearlyStats();\r\n      myLastQuarterStats();\r\n      myLastYearStats();\r\n      myLastMonthStats();\r\n      myLast30DaysStats();\r\n    } else {\r\n      window.location.href = \"/\";\r\n    }\r\n  }, []);\r\n\r\n  console.log(\"This is filter bar\", filterBar);\r\n  return (\r\n    <DashboardContainer>\r\n      <FilterModal\r\n        messageType={messageType}\r\n        setMessageType={onMessageTypeChange}\r\n        messageSender={messageSender}\r\n        setMessageSender={onMessageSenderChange}\r\n        messageStatus={messageStatus}\r\n        setMessageStatus={onMessageStatusChange}\r\n        filterOpen={filterOpen}\r\n        setFilterOpen={setFilterOpen}\r\n        monthlyStats={monthlyStats}\r\n      />\r\n      <Grid container style={{ margin: 0, padding: 0 }}>\r\n        <Grid item xs={12} lg={8}>\r\n          <Title>\r\n            <Titleheading>{`Welcome back ${\r\n              user.first_name + \" \" + user.last_name\r\n            }!`}</Titleheading>\r\n            <Titleparagrapg>\r\n              You have 15 unread messages in your RS Text Chat feed.{\" \"}\r\n              <span style={{ color: \"#3871DA\" }}>\r\n                <u>View Now</u>\r\n              </span>\r\n            </Titleparagrapg>\r\n          </Title>\r\n          <TableSection>\r\n            <Grid container style={{ margin: 0, padding: 0 }} direction>\r\n              <Grid item xs={12} lg={6}>\r\n                <TableHeaderCol1Heading>Team Queue</TableHeaderCol1Heading>\r\n                <TableHeaderCol2P>\r\n                  You have{\" \"}\r\n                  <span style={{ color: \"#3871DA\" }}>\r\n                    {selectedDateQueue ? selectedDateQueue.length : 0} items\r\n                  </span>{\" \"}\r\n                  in your queue\r\n                </TableHeaderCol2P>\r\n              </Grid>\r\n              <Grid item xs={12} lg={6}>\r\n                <TableHeaderRight>\r\n                  <DateField>\r\n                    <DatePicker\r\n                      onChange={(e) => {\r\n                        var dt = new moment(e).format(\"YYYY-MM-DD\");\r\n                        console.log(\"This is it\", dt);\r\n                        getTaskQueueByDate(dt);\r\n                        onChange(e);\r\n                      }}\r\n                      value={value}\r\n                    />\r\n                    {/* <input\r\n                      type=\"date\"\r\n                      onChange={(e) => {\r\n                        // setQueueDate(e.target.value);\r\n                        getTaskQueueByDate(e.target.value);\r\n                      }}\r\n                      // value={queueDate}\r\n                      InputProps={{ disableUnderline: true }}\r\n                      fullWidth={true}\r\n                      className=\"dateTextField\"\r\n                      // style={{ zIndex: 0, border: \"none\" }}\r\n                    /> */}\r\n                  </DateField>\r\n                  <FilterField\r\n                    onClick={() => setFilterOpen(true)}\r\n                    filterOpen={filterOpen}\r\n                  >\r\n                    <FilterText filterOpen={filterOpen}>Filter</FilterText>\r\n                    <FilterIcon filterOpen={filterOpen} />\r\n                  </FilterField>\r\n                </TableHeaderRight>\r\n              </Grid>\r\n            </Grid>\r\n            <Table\r\n              messageType={messageType}\r\n              messageStatus={messageStatus}\r\n              messageSender={messageSender}\r\n              selectedDateQueue={selectedDateQueue}\r\n            />\r\n            {selectedDateQueue == null || selectedDateQueue.length === 0 ? (\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                style={{ marginTop: -100 }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                    color: \"#74777c\",\r\n                    fontWeight: \"bold\",\r\n                    margin: 0,\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  Your task queue is clear!\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                    color: \"#74777c\",\r\n                    fontWeight: \"bold\",\r\n                    margin: 0,\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  Consistent messaging is key\r\n                </p>\r\n                <p\r\n                  style={{\r\n                    width: \"100%\",\r\n                    textAlign: \"center\",\r\n                    color: \"#74777c\",\r\n                    fontWeight: \"bold\",\r\n                    margin: 0,\r\n                    fontSize: 12,\r\n                  }}\r\n                >\r\n                  to building an engaging audience!\r\n                </p>\r\n\r\n                <Button>+ New</Button>\r\n              </Grid>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            {selectedDateQueue == null || selectedDateQueue.length === 0 ? (\r\n              <div></div>\r\n            ) : (\r\n              <TableFooter style={{ borderTop: \"1px solid #dadada\" }}>\r\n                <TableFooterText style={{ marginTop: 12 }}>\r\n                  View More{\" \"}\r\n                  {selectedDateQueue && selectedDateQueue.length != 0\r\n                    ? `(${selectedDateQueue.length})`\r\n                    : \"\"}\r\n                </TableFooterText>\r\n              </TableFooter>\r\n            )}\r\n          </TableSection>\r\n\r\n          <ChartSection>\r\n            <Grid container style={{ margin: 0, padding: 0 }}>\r\n              <Grid item xs={12} lg={6}>\r\n                <ChartDiv>\r\n                  <ChartTop>\r\n                    <MM>\r\n                      <MMH>{currency} Messages</MMH>\r\n                      <MonthField>\r\n                        <DropdownButton\r\n                          id=\"dropdown-basic-button\"\r\n                          title={currency}\r\n                          drop={\"right\"}\r\n                        >\r\n                          {currencies.map((option) => (\r\n                            <Dropdown.Item\r\n                              style={{\r\n                                background:\r\n                                  currency === option.label\r\n                                    ? \"#348ef7\"\r\n                                    : \"white\",\r\n                                color:\r\n                                  currency === option.label ? \"white\" : \"black\",\r\n                              }}\r\n                              onClick={(e) => {\r\n                                if (option.label === \"This Quarter\") {\r\n                                  setDoughnutChatData(quarterlyStats);\r\n                                } else if (option.label === \"This Year\") {\r\n                                  setDoughnutChatData(yearlyStats);\r\n                                } else if (option.label === \"Last Quarter\") {\r\n                                  setDoughnutChatData(lastQuarterStats);\r\n                                } else if (option.label === \"Last Year\") {\r\n                                  setDoughnutChatData(lastYearStats);\r\n                                } else if (option.label === \"Last Month\") {\r\n                                  setDoughnutChatData(lastMonthStats);\r\n                                } else if (option.label === \"Last 30 Days\") {\r\n                                  setDoughnutChatData(last30Stats);\r\n                                } else {\r\n                                  setDoughnutChatData(monthlyStats);\r\n                                }\r\n                                setCurrency(option.label);\r\n                              }}\r\n                            >\r\n                              {option.label}\r\n                            </Dropdown.Item>\r\n                          ))}\r\n                        </DropdownButton>\r\n                      </MonthField>\r\n                    </MM>\r\n                    <Count>\r\n                      {doughnutChartData ? doughnutChartData.total_messages : 0}\r\n                    </Count>\r\n                  </ChartTop>\r\n                  <ChartDivS>\r\n                    {/* <Chart monthlyStats={monthlyStats} /> */}\r\n                    {doughnutChartData != null && (\r\n                      <DoughnutChart\r\n                        monthlyStats={doughnutChartData}\r\n                        // className=\"chart\"\r\n                        // data={[1, 2, 3, 4, 5, 6, 7]}\r\n                        // labels={[\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]}\r\n                      />\r\n                    )}\r\n                  </ChartDivS>\r\n\r\n                  <ChartFooter>\r\n                    <ChartFooterButton>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          height: \"12px\",\r\n                          color: \"#8BB14C\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>Personal Texts</ChartFooterContent>\r\n                    </ChartFooterButton>\r\n                    <ChartFooterButton2>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          color: \"#4f81bc\",\r\n                          height: \"12px\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>Total DM's</ChartFooterContent>\r\n                    </ChartFooterButton2>\r\n                    <ChartFooterButton3>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          height: \"12px\",\r\n                          color: \"#c0504e\",\r\n\r\n                          marginLeft: \"3px\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>RS Text</ChartFooterContent>\r\n                    </ChartFooterButton3>\r\n                  </ChartFooter>\r\n                </ChartDiv>\r\n              </Grid>\r\n              <Grid item xs={12} lg={6}>\r\n                <ChartDiv2>\r\n                  <ChartTop>\r\n                    <MM>\r\n                      <MMH>{filterBar} Messages</MMH>\r\n                      <MonthField>\r\n                        <DropdownButton\r\n                          id=\"dropdown-basic-button\"\r\n                          title={filterBar}\r\n                          drop={\"right\"}\r\n                        >\r\n                          {currencies.map((option) => (\r\n                            <Dropdown.Item\r\n                              style={{\r\n                                background:\r\n                                  filterBar === option.label\r\n                                    ? \"#348ef7\"\r\n                                    : \"white\",\r\n                                color:\r\n                                  filterBar === option.label\r\n                                    ? \"white\"\r\n                                    : \"black\",\r\n                              }}\r\n                              onClick={(e) => {\r\n                                if (option.label === \"This Quarter\") {\r\n                                  setBarchartData(quarterlyStats);\r\n                                } else if (option.label === \"This Year\") {\r\n                                  setBarchartData(yearlyStats);\r\n                                } else if (option.label === \"Last Quarter\") {\r\n                                  setBarchartData(lastQuarterStats);\r\n                                } else if (option.label === \"Last Year\") {\r\n                                  setBarchartData(lastYearStats);\r\n                                } else if (option.label === \"Last Month\") {\r\n                                  setBarchartData(lastMonthStats);\r\n                                } else if (option.label === \"Last 30 Days\") {\r\n                                  setBarchartData(last30Stats);\r\n                                } else {\r\n                                  setBarchartData(monthlyStats);\r\n                                }\r\n                                setFilterBar(option.label);\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              {option.label}\r\n                            </Dropdown.Item>\r\n                          ))}\r\n                        </DropdownButton>\r\n                      </MonthField>\r\n                    </MM>\r\n                    <Count>\r\n                      {barChartData ? barChartData.total_messages : 0}\r\n                    </Count>\r\n                  </ChartTop>\r\n\r\n                  <div>\r\n                    {barChartData && <Barchart monthlyStats={barChartData} />}\r\n                  </div>\r\n\r\n                  <ChartFooter>\r\n                    <ChartFooterButton>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          height: \"12px\",\r\n                          color: \"#0091FF\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>Twitter DM’s</ChartFooterContent>\r\n                    </ChartFooterButton>\r\n                    <ChartFooterButton2>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          height: \"12px\",\r\n                          color: \"#8BB14C\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>Personal Text</ChartFooterContent>\r\n                    </ChartFooterButton2>\r\n                    <ChartFooterButton3>\r\n                      <FiberManualRecordIcon\r\n                        style={{\r\n                          width: \"12px\",\r\n                          height: \"12px\",\r\n                          color: \"#373D4A\",\r\n                          marginLeft: \"3px\",\r\n                        }}\r\n                      />\r\n                      <ChartFooterContent>RS Text</ChartFooterContent>\r\n                    </ChartFooterButton3>\r\n                  </ChartFooter>\r\n                </ChartDiv2>\r\n              </Grid>\r\n            </Grid>\r\n          </ChartSection>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4}>\r\n          <HomeRight\r\n            user={user && user}\r\n            loggedInUserStats={loggedInUserStats}\r\n            monthlyStats={homeRightStats && homeRightStats}\r\n            onFilterChange={(filter) => {\r\n              if (filter === \"This Quarter\") {\r\n                quarterlyStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n\r\n                setHomeRightStats(quarterlyStats);\r\n              } else if (filter === \"This Year\") {\r\n                yearlyStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(yearlyStats);\r\n              } else if (filter === \"Last Quarter\") {\r\n                lastQuarterStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(lastQuarterStats);\r\n              } else if (filter === \"Last Year\") {\r\n                lastYearStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(lastYearStats);\r\n              } else if (filter === \"Last Month\") {\r\n                lastMonthStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(lastMonthStats);\r\n              } else if (filter === \"Last 30 Days\") {\r\n                last30Stats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(last30Stats);\r\n              } else {\r\n                monthlyStats.users.map((user, index) => {\r\n                  var name =\r\n                    JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                    \" \" +\r\n                    JSON.parse(localStorage.getItem(\"user\")).last_name;\r\n                  if (name === user.table.name) {\r\n                    setLoggedInUserStats(user.table);\r\n                  }\r\n                });\r\n                setHomeRightStats(monthlyStats);\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </DashboardContainer>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\index.js",["173","174","175"],"import React from \"react\";\r\nimport {\r\n  SignupContainer,\r\n  SignupWrapper,\r\n  SignupRow,\r\n  Column1,\r\n  Column2,\r\n  Img,\r\n  Privacypolicy,\r\n  PrivacypolicyContainer,\r\n  VertivalSpace,\r\n} from \"./signupElements\";\r\nimport Image from \"../../images/login.png\";\r\nimport Form from \"./form\";\r\n\r\nexport default function Signup() {\r\n  return (\r\n    <SignupContainer>\r\n      <SignupWrapper>\r\n        <SignupRow>\r\n          <Column1>\r\n            <Form />\r\n          </Column1>\r\n          <Column2>\r\n            <Img src={Image}></Img>\r\n          </Column2>\r\n        </SignupRow>\r\n      </SignupWrapper>\r\n    </SignupContainer>\r\n  );\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\model.js",["176"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {},\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    position: \"fixed\",\r\n    top: 170,\r\n    left: 50,\r\n    borderRadius: 5,\r\n  },\r\n}));\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  @media screen and (max-width: 1000px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst ListCol = styled.div`\r\n  margin-right: 3rem;\r\n  @media screen and (max-width: 1000px) {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.p`\r\n  color: #222222;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  letter-spacing: 0;\r\n  line-height: 17px;\r\n  margin: 0px;\r\n`;\r\n\r\nconst Option = styled.p`\r\n  color: #222222;\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n  letter-spacing: 0;\r\n  line-height: 17px;\r\n  cursor: pointer;\r\n  margin: 0px;\r\n`;\r\n\r\nexport default function TransitionsModal({ open, setShowModal }) {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        disableEnforceFocus\r\n        disableAutoFocus\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <>\r\n            <ArrowDropUpIcon\r\n              fontSize=\"large\"\r\n              style={{ color: \"white\", position: \"fixed\", top: 149, left: 120 }}\r\n            />\r\n            <div className={classes.paper}>\r\n              <Container>\r\n                <ListCol>\r\n                  <Heading>Message</Heading>\r\n                  <Option>RS Text</Option>\r\n                  <Option>Personal Text</Option>\r\n                  <Option>Twitter DM’s</Option>\r\n                </ListCol>\r\n\r\n                <ListCol>\r\n                  <Heading>Publishing</Heading>\r\n                  <Option>New Tweet</Option>\r\n                </ListCol>\r\n\r\n                <ListCol>\r\n                  <Heading>Media Library</Heading>\r\n                  <Option>Media file</Option>\r\n                  <Option>New placeholder</Option>\r\n                </ListCol>\r\n\r\n                <ListCol>\r\n                  <Heading>Contact</Heading>\r\n                  <Option>New contact</Option>\r\n                </ListCol>\r\n\r\n                <ListCol>\r\n                  <Heading>Other</Heading>\r\n                  <Option>Team Member</Option>\r\n                  <Option>Snippet</Option>\r\n                  <Option>Postion</Option>\r\n                  <Option>Tag</Option>\r\n                  <Option>Rating</Option>\r\n                  <Option>Status</Option>\r\n                </ListCol>\r\n              </Container>\r\n            </div>\r\n          </>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\chart.js",["177","178"],"import CanvasJSReact from \"./canvaJS/canvasjs.react\";\r\nvar React = require(\"react\");\r\nvar Component = React.Component;\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\nconst Chart = (props) => {\r\n  const options = {\r\n    animationEnabled: true,\r\n\r\n    data: [\r\n      {\r\n        type: \"doughnut\",\r\n        showInLegend: false,\r\n        indexLabel: \"{name}: {y}\",\r\n        yValueFormatString: \"#,###'%'\",\r\n        dataPoints: [\r\n          {\r\n            name: \"Recruite Messages\",\r\n            y: props.monthlyStats\r\n              ? props.monthlyStats.total_recruits_messaged\r\n              : 0,\r\n          },\r\n          {\r\n            name: \"Personal texts\",\r\n            y: props.monthlyStats ? props.monthlyStats.total_personal_texts : 0,\r\n          },\r\n          {\r\n            name: \"Total DM's\",\r\n            y: props.monthlyStats ? props.monthlyStats.total_dms : 0,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <CanvasJSChart\r\n        options={options}\r\n        width=\"342.5px\"\r\n        /* onRef={ref => this.chart = ref} */\r\n      />\r\n      {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\table.js",["179","180","181","182","183","184"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n];\r\n\r\nexport default function AcccessibleTable(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer\r\n      PaperProps={{\r\n        style: {\r\n          backgroundColor: \"red\",\r\n          boxShadow: \"none\",\r\n        },\r\n      }}\r\n      style={{ borderCollapse: \"unset\" }}\r\n      // component={Paper}\r\n    >\r\n      <div\r\n        style={{\r\n          maxHeight: 190,\r\n          overflow:\r\n            props.selectedDateQueue != null && props.selectedDateQueue != 0\r\n              ? \"scroll\"\r\n              : \"hidden\",\r\n          minWidth: 630,\r\n          minHeight: 190,\r\n        }}\r\n      >\r\n        <Table\r\n          stickyHeader\r\n          className={classes.table}\r\n          aria-label=\"caption table\"\r\n        >\r\n          <TableHead\r\n            style={{\r\n              background: \"#F5F6F9\",\r\n              boxShadow: \"none\",\r\n            }}\r\n          >\r\n            <TableRow>\r\n              <TableCell\r\n                style={{ color: \"#222222\", fontWeight: 600, fontSize: 14 }}\r\n              >\r\n                Send Time\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                style={{ color: \"#222222\", fontWeight: 600, fontSize: 14 }}\r\n              >\r\n                Sender\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                style={{ color: \"#222222\", fontWeight: 600, fontSize: 14 }}\r\n              >\r\n                Recipients\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                style={{ color: \"#222222\", fontWeight: 600, fontSize: 14 }}\r\n              >\r\n                Type\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                style={{ color: \"#222222\", fontWeight: 600, fontSize: 14 }}\r\n              >\r\n                Send Time\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                style={{ color: \"#222222\", fontWeight: 600, fontSize: 14 }}\r\n              >\r\n                Status\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          {props.selectedDateQueue != null &&\r\n          props.selectedDateQueue.length != 0 ? (\r\n            <TableBody>\r\n              {props.selectedDateQueue &&\r\n                props.selectedDateQueue.map((item) => {\r\n                  var type = item.platform && item.platform.name;\r\n                  if (\r\n                    item.item_type === \"Message\" &&\r\n                    item.platform.name === \"Twitter\"\r\n                  ) {\r\n                    type = \"Twitter DM\";\r\n                  }\r\n                  return (\r\n                    <TableRow\r\n                      style={{\r\n                        color: item.status == \"Completed\" ? \"#A4A4A4\" : \"black\",\r\n                      }}\r\n                    >\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        style={{\r\n                          // color: \"#A4A4A4\",\r\n                          color: \"black\",\r\n                          fontWeight: 600,\r\n                          fontSize: 13,\r\n                        }}\r\n                      >\r\n                        {moment(item.send_at).format(\"h:mm:ss a\")}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        style={{\r\n                          // color: \"#A4A4A4\",\r\n                          fontWeight: 600,\r\n                          fontSize: 13,\r\n                        }}\r\n                      >\r\n                        {item.sender\r\n                          ? item.sender.first_name + \" \" + item.sender.last_name\r\n                          : item.queued_by}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        style={{\r\n                          // color: \"#A4A4A4\",\r\n                          fontWeight: 600,\r\n                          fontSize: 13,\r\n                        }}\r\n                      >\r\n                        {item.recipients.filter_list[0].name || \"Individuals\"}{\" \"}\r\n                        {item.recipients && \"(\" + item.recipients.count + \")\"}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        style={{\r\n                          // color: \"#A4A4A4\",\r\n                          fontWeight: 600,\r\n                          fontSize: 13,\r\n                        }}\r\n                      >\r\n                        {type}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        style={{\r\n                          // color: \"#A4A4A4\",\r\n                          fontWeight: 600,\r\n                          fontSize: 13,\r\n                        }}\r\n                      >\r\n                        {moment(item.next_send_at).format(\"h:mm:ss a\")}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          {item.status == \"Completed\" && (\r\n                            <CheckCircleIcon\r\n                              fontSize=\"inherit\"\r\n                              style={{ color: \"#006644\" }}\r\n                            />\r\n                          )}\r\n\r\n                          <p\r\n                            style={{\r\n                              // color: \"#A4A4A4\",\r\n                              margin: 0,\r\n                              padding: 0,\r\n                              fontWeight: 600,\r\n                              fontSize: 13,\r\n                            }}\r\n                          >\r\n                            {item.status}\r\n                          </p>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {/*         \r\n          <TableRow>\r\n            <TableCell\r\n              component='th'\r\n              scope='row'\r\n              style={{ color: \"#222222\", fontWeight: 600, fontSize: 13 }}>\r\n              11:30am\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{ color: \"#222222\", fontWeight: 600, fontSize: 13 }}>\r\n              Coach Marks\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{ color: \"#3871DA\", fontWeight: 600, fontSize: 13 }}>\r\n              Miami Board{\" \"}\r\n              <span style={{ color: \"#222222\", fontWeight: 600, fontSize: 13 }}>\r\n                (184)\r\n              </span>\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{ color: \"#222222\", fontWeight: 600, fontSize: 13 }}>\r\n              DM's\r\n            </TableCell>\r\n            <TableCell\r\n              align='left'\r\n              style={{ color: \"#222222\", fontWeight: 600, fontSize: 13 }}>\r\n              11:32am\r\n            </TableCell>\r\n            <TableCell align='left'>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                }}>\r\n                <CheckCircleIcon\r\n                  fontSize='inherit'\r\n                  style={{ color: \"transparent\" }}\r\n                />\r\n                <p\r\n                  style={{\r\n                    color: \"#222222\",\r\n                    margin: 0,\r\n                    padding: 0,\r\n                    fontWeight: 600,\r\n                    fontSize: 13,\r\n                  }}>\r\n                  In Progress\r\n                </p>\r\n              </div>\r\n            </TableCell>\r\n          </TableRow>\r\n        */}\r\n            </TableBody>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </Table>\r\n      </div>\r\n    </TableContainer>\r\n  );\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeElements.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\filterModal.js",["185","186","187","188","189"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport styled from \"styled-components\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {},\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    position: \"fixed\",\r\n    top: 300,\r\n    right: 550,\r\n\r\n    borderRadius: 5,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      top: 100,\r\n      right: 50,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  @media screen and (max-width: 1000px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst ListCol = styled.div`\r\n  margin-right: 2rem;\r\n  @media screen and (max-width: 1000px) {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst ListTopContainer = styled.div``;\r\n\r\nconst HeadingContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Heading = styled.p`\r\n  color: #222222;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  letter-spacing: 0;\r\n  line-height: 17px;\r\n`;\r\n\r\nconst Heading2 = styled.p`\r\n  color: #222222;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  letter-spacing: 0;\r\n  line-height: 17px;\r\n  margin: 0px;\r\n  padding: 0;\r\n`;\r\n\r\nconst Option = styled.p`\r\n  color: #222222;\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n  letter-spacing: 0;\r\n  line-height: 17px;\r\n  cursor: pointer;\r\n  margin: 0px;\r\n`;\r\n\r\nexport default function TransitionsModal(props) {\r\n  const classes = useStyles();\r\n  const [search, setSearch] = useState(\"\");\r\n  var number = 0;\r\n  const handleClose = () => {\r\n    props.setFilterOpen(false);\r\n  };\r\n\r\n  const messageType = [\"All types\", \"Personal Text\", \"Twitter DM’s\", \"Tweets\"];\r\n  const messageSender = [\r\n    \"All Team Members\",\r\n    \"Personal Text\",\r\n    \"Twitter DM’s\",\r\n    \"Tweets\",\r\n  ];\r\n  const messageStatus = [\r\n    \"All status (Excluding Draft)\",\r\n    \"In Progress\",\r\n    \"Pending\",\r\n  ];\r\n  // console.log(\"These are monthly stats\", props.monthlyStats);\r\n  return (\r\n    <div>\r\n      <Modal\r\n        disableEnforceFocus\r\n        disableAutoFocus\r\n        open={props.filterOpen}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={props.filterOpen}>\r\n          <div className={classes.paper}>\r\n            <Container>\r\n              <ListCol>\r\n                <Heading>Message Type</Heading>\r\n                <HeadingContainer>\r\n                  <ListCol>\r\n                    {messageType.map((type) => {\r\n                      if (props.messageType === type) {\r\n                        return (\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            style={{ width: 120 }}\r\n                          >\r\n                            {\" \"}\r\n                            <CheckCircleIcon\r\n                              fontSize=\"inherit\"\r\n                              style={{ color: \"#006644\", marginRight: 5 }}\r\n                            />\r\n                            <Heading2>{type}</Heading2>\r\n                          </Grid>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <Option\r\n                            style={{ marginLeft: 20 }}\r\n                            onClick={() => {\r\n                              props.setMessageType(type);\r\n                            }}\r\n                          >\r\n                            {type}\r\n                          </Option>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </ListCol>\r\n                </HeadingContainer>\r\n              </ListCol>\r\n\r\n              <ListCol>\r\n                <Heading>Sender</Heading>\r\n                <HeadingContainer>\r\n                  {/* <CheckCircleIcon\r\n                    fontSize=\"inherit\"\r\n                    style={{ color: \"#006644\", marginRight: 5 }}\r\n                  /> */}\r\n                  <Grid container direction=\"column\"></Grid>\r\n                  <ListCol>\r\n                    <Grid container direction=\"row\" style={{ width: 150 }}>\r\n                      {\" \"}\r\n                      {props.messageSender === \"All Team Members\" && (\r\n                        <CheckCircleIcon\r\n                          fontSize=\"inherit\"\r\n                          style={{ color: \"#006644\", marginRight: 5 }}\r\n                        />\r\n                      )}\r\n                      <Heading2\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => {\r\n                          props.setMessageSender(\"All Team Members\");\r\n                        }}\r\n                      >\r\n                        {\"All Team Members\"}\r\n                      </Heading2>\r\n                      <input\r\n                        type=\"text\"\r\n                        style={{\r\n                          border: \"1px solid #e6e7ec\",\r\n                          borderRadius: 4,\r\n                        }}\r\n                        value={search}\r\n                        onChange={(e) => {\r\n                          setSearch(e.target.value);\r\n                        }}\r\n                      ></input>\r\n                    </Grid>\r\n                    {props.monthlyStats &&\r\n                      props.monthlyStats.users.map((user, index) => {\r\n                        // console.log(\"This is the atbel\", user.table);\r\n\r\n                        if (number < 3) {\r\n                          if (props.messageSender === user.table.name) {\r\n                            return (\r\n                              <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                style={{ width: 150 }}\r\n                              >\r\n                                {\" \"}\r\n                                <CheckCircleIcon\r\n                                  fontSize=\"inherit\"\r\n                                  style={{ color: \"#006644\", marginRight: 5 }}\r\n                                />\r\n                                <Heading2>{user.table.name}</Heading2>\r\n                              </Grid>\r\n                            );\r\n                          } else {\r\n                            if (search != \"\") {\r\n                              if (\r\n                                user.table.name.toLowerCase().search(search) !=\r\n                                -1\r\n                              ) {\r\n                                number = number + 1;\r\n                                return (\r\n                                  <Grid container direction=\"column\">\r\n                                    <Option\r\n                                      style={{ marginLeft: 20 }}\r\n                                      onClick={() => {\r\n                                        props.setMessageSender(user.table.name);\r\n                                      }}\r\n                                    >\r\n                                      {user.table.name}\r\n                                    </Option>\r\n                                  </Grid>\r\n                                );\r\n                              }\r\n                            } else {\r\n                              number = number + 1;\r\n                              return (\r\n                                <Grid container direction=\"column\">\r\n                                  <Option\r\n                                    style={{ marginLeft: 20 }}\r\n                                    onClick={() => {\r\n                                      props.setMessageSender(user.table.name);\r\n                                    }}\r\n                                  >\r\n                                    {user.table.name}\r\n                                  </Option>\r\n                                </Grid>\r\n                              );\r\n                            }\r\n                          }\r\n                        }\r\n                      })}\r\n                    {/* <Heading2>All Team Members</Heading2>\r\n                    <Option>Personal Text</Option>\r\n                    <Option>Twitter DM’s</Option>\r\n                    <Option>Tweets</Option> */}\r\n                  </ListCol>\r\n                </HeadingContainer>\r\n              </ListCol>\r\n\r\n              <ListCol>\r\n                <Heading>Message Status</Heading>\r\n                <HeadingContainer>\r\n                  {/* <CheckCircleIcon\r\n                    fontSize=\"inherit\"\r\n                    style={{ color: \"#006644\", marginRight: 5 }}\r\n                  /> */}\r\n                  <ListCol>\r\n                    {messageStatus.map((type) => {\r\n                      if (props.messageStatus === type) {\r\n                        return (\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            style={{ width: 200 }}\r\n                          >\r\n                            {\" \"}\r\n                            <CheckCircleIcon\r\n                              fontSize=\"inherit\"\r\n                              style={{ color: \"#006644\", marginRight: 5 }}\r\n                            />\r\n                            <Heading2>{type}</Heading2>\r\n                          </Grid>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <Option\r\n                            style={{ marginLeft: 20 }}\r\n                            onClick={() => {\r\n                              props.setMessageStatus(type);\r\n                            }}\r\n                          >\r\n                            {type}\r\n                          </Option>\r\n                        );\r\n                      }\r\n                    })}\r\n                    {/* <Heading2>All status (Excluding Draft)</Heading2>\r\n                    <Option>Personal Text</Option>\r\n                    <Option>Twitter DM’s</Option>\r\n                    <Option>Tweets</Option> */}\r\n                  </ListCol>\r\n                </HeadingContainer>\r\n              </ListCol>\r\n            </Container>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\barChart.js",[],["190","191"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeRight.js",["192","193","194","195","196","197","198","199","200","201"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  PersonContainer,\r\n  RightSectionContainer,\r\n  Num,\r\n  AvatartInfo,\r\n  Avatar,\r\n  AvatarName,\r\n  AvatarButton,\r\n  InfoSection,\r\n  InfoSubBox,\r\n  InfoP,\r\n  InfoBox,\r\n  InfoH,\r\n  StackSecion,\r\n  MonthField,\r\n  MM,\r\n  MMH,\r\n  ListSec,\r\n  ListItem,\r\n  ListNum,\r\n  ListAvatartSec,\r\n  ListAvatart,\r\n  ListStart,\r\n  ListName,\r\n  ListNumber,\r\n  ListBottom,\r\n  ListBottomText,\r\n} from \"./homeElementsRight\";\r\nimport Ex1 from \"../../images/p1.jpg\";\r\nimport Start from \"../../images/star.svg\";\r\nimport AvatarImg from \"../../images/avatar.jpeg\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nconst currencies = [\r\n  {\r\n    value: \"1\",\r\n    label: \"Last 30 Days\",\r\n  },\r\n  {\r\n    value: \"2\",\r\n    label: \"This Month\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"This Quarter\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"This Year\",\r\n  },\r\n  {\r\n    value: \"5\",\r\n    label: \"Last Month\",\r\n  },\r\n  {\r\n    value: \"6\",\r\n    label: \"Last Quarter\",\r\n  },\r\n  {\r\n    value: \"7\",\r\n    label: \"Last Year\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  underline: {\r\n    \"&&&:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"&&:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  icon: {\r\n    color: \"red\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  input: {\r\n    color: \"#222222\",\r\n    fontSize: 14,\r\n    background: \"transparent\",\r\n    fontFamily: \"ProximaNovaSemibold\",\r\n  },\r\n});\r\n\r\nfunction HomeRight(props) {\r\n  const classes = useStyles();\r\n  const [currency, setCurrency] = React.useState(\"This Month\");\r\n  const [rank, setRank] = React.useState(1);\r\n  // console.log(\"These are stats in homeright\", props.monthlyStats);\r\n  var stats = props.monthlyStats && props.monthlyStats;\r\n  const handleChange = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  console.log(\"THis should be image\", props.loggedInUserStats);\r\n  return (\r\n    <RightSectionContainer>\r\n      <PersonContainer>\r\n        <Num>{props.loggedInUserStats ? props.loggedInUserStats.rank : 1}.</Num>\r\n        <AvatartInfo>\r\n          <Avatar\r\n            src={\r\n              JSON.parse(localStorage.getItem(\"user\")).twitter_profile\r\n                .profile_image || AvatarImg\r\n            }\r\n          />\r\n          <AvatarName>\r\n            {props.user.first_name + \" \" + props.user.last_name}\r\n          </AvatarName>\r\n          <AvatarButton>Score Details</AvatarButton>\r\n        </AvatartInfo>\r\n      </PersonContainer>\r\n\r\n      <InfoSection>\r\n        <InfoBox>\r\n          <InfoSubBox style={{ paddingLeft: \"21px\" }}>\r\n            <InfoP>DM’s</InfoP>\r\n            <InfoH>\r\n              {props.loggedInUserStats ? props.loggedInUserStats.dms : 0}\r\n            </InfoH>\r\n          </InfoSubBox>\r\n          <InfoSubBox>\r\n            <InfoP>Personal Text</InfoP>\r\n            <InfoH>\r\n              {props.loggedInUserStats ? props.loggedInUserStats.pts : 0}\r\n            </InfoH>\r\n          </InfoSubBox>\r\n          <InfoSubBox style={{ paddingRight: \"21px\" }}>\r\n            <InfoP>RS Text</InfoP>\r\n            <InfoH>\r\n              {props.loggedInUserStats ? props.loggedInUserStats.rst : 0}\r\n            </InfoH>\r\n          </InfoSubBox>\r\n        </InfoBox>\r\n      </InfoSection>\r\n\r\n      <StackSecion>\r\n        <MM>\r\n          <MMH>The StackUp</MMH>\r\n          <MonthField>\r\n            <DropdownButton\r\n              drop={\"right\"}\r\n              id=\"dropdown-basic-button\"\r\n              title={currency}\r\n            >\r\n              {currencies.map((option) => (\r\n                <Dropdown.Item\r\n                  style={{\r\n                    background: currency === option.label ? \"#348ef7\" : \"white\",\r\n                    color: currency === option.label ? \"white\" : \"black\",\r\n                  }}\r\n                  onClick={(e) => {\r\n                    props.onFilterChange(option.label);\r\n                    setCurrency(option.label);\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {option.label}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </DropdownButton>\r\n            {/* <TextField\r\n              select\r\n              value={currency}\r\n              style={{\r\n                background: \"transparent\",\r\n              }}\r\n              SelectProps={{\r\n                classes: { icon: classes.icon },\r\n                IconComponent: () => (\r\n                  <KeyboardArrowDownIcon\r\n                    style={{\r\n                      margin: 0,\r\n                      padding: 0,\r\n                      width: \"15px\",\r\n                    }}\r\n                  />\r\n                ),\r\n              }}\r\n              onChange={handleChange}\r\n              fullWidth={true}\r\n              InputProps={{\r\n                disableUnderline: true,\r\n                className: classes.input,\r\n              }}\r\n            >\r\n              {currencies.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          \r\n           */}\r\n          </MonthField>\r\n        </MM>\r\n\r\n        <ListSec>\r\n          {stats &&\r\n            stats.users.map((user, index) => {\r\n              // console.log(\"THis is user\", user);\r\n              // var name = props.user.first_name + \" \" + props.user.last_name;\r\n              // if (name === user.table.name) {\r\n              //   setRank(user.rank);\r\n              // }\r\n              if (index < 4) {\r\n                return (\r\n                  <ListItem>\r\n                    <ListNum>{index + 1}.</ListNum>\r\n                    <ListAvatartSec>\r\n                      <ListAvatart src={user.table.image} />\r\n                      {index === 0 && <ListStart src={Start} />}\r\n                    </ListAvatartSec>\r\n                    <ListName>{user.table.name}</ListName>\r\n                    <ListNumber>{user.table.total}</ListNumber>\r\n                  </ListItem>\r\n                );\r\n              }\r\n            })}\r\n\r\n          {/* <ListItem>\r\n            <ListNum>2.</ListNum>\r\n            <ListAvatartSec>\r\n              <ListAvatart src={Ex1} />\r\n              <ListStart src={Start} />\r\n            </ListAvatartSec>\r\n            <ListName>Coach Smith</ListName>\r\n            <ListNumber>611</ListNumber>\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <ListNum>3.</ListNum>\r\n            <ListAvatartSec>\r\n              <ListAvatart src={Ex1} />\r\n              <ListStart src={Start} />\r\n            </ListAvatartSec>\r\n            <ListName>Coach Smith</ListName>\r\n            <ListNumber>611</ListNumber>\r\n          </ListItem> */}\r\n        </ListSec>\r\n      </StackSecion>\r\n      <ListBottom>\r\n        <ListBottomText>View Details</ListBottomText>\r\n      </ListBottom>\r\n    </RightSectionContainer>\r\n  );\r\n}\r\n\r\nexport default HomeRight;\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\signupElements.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\form.js",["202","203","204","205","206","207"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  FormWrap,\r\n  Icon,\r\n  FormContent,\r\n  Form,\r\n  FormH1,\r\n  FormLabel,\r\n  FormInput,\r\n  FormButton,\r\n  FormButton1,\r\n  FormH2,\r\n  FormInputWrap,\r\n  Text,\r\n  FormButtonWrap,\r\n  RememberWrap,\r\n  Underline,\r\n  Or,\r\n  FormButton3,\r\n  Logoimage,\r\n  Header,\r\n  HomeButton,\r\n  Rememberme,\r\n  Forgotpassword,\r\n  TwitterButtonText,\r\n  Privacypolicy,\r\n} from \"./signupElements\";\r\nimport { FiMail } from \"react-icons/fi\";\r\nimport { MdVpnKey } from \"react-icons/md\";\r\nimport Checkbox from \"./checkbox\";\r\nimport { FaTwitter } from \"react-icons/fa\";\r\nimport Logo from \"../../images/logo.png\";\r\nimport { BsEyeFill } from \"react-icons/bs\";\r\nimport { loginUser, registerUser } from \"../../ApiHelper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nvar validator = require(\"email-validator\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function Signin() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [email, setEmail] = useState(\"faisalashraf786.fa@gmail.com\");\r\n  const [password, setPassword] = useState(\"123456\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    console.log(\"checked :: \", checked);\r\n    setChecked(!checked);\r\n  };\r\n\r\n  const registerTheUser = () => {\r\n    setLoading(true);\r\n    registerUser(email, password).then(\r\n      (res) => {\r\n        console.log(res);\r\n        if (res.statusText === \"Created\") {\r\n          console.log(\"This is the resonse of login\", res.data);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n          console.log(localStorage.getItem(\"user\"));\r\n          setLoading(false);\r\n          notifyUser(\"User Registered Successfully!!\");\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(\"this is error\", error);\r\n        notifyUser(\"Something went wrong please try again\");\r\n        setLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  const loginUserUsingCredential = () => {\r\n    setLoading(true);\r\n    loginUser(email, password).then(\r\n      (res) => {\r\n        // console.log(res);\r\n        if (res.statusText === \"OK\") {\r\n          // console.log(\"This is the resonse of login\", res.data);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n          console.log(localStorage.getItem(\"user\"));\r\n          setLoading(false);\r\n          window.location.href = \"/dashboard\";\r\n        }\r\n      },\r\n      (error) => {\r\n        // console.log(\"this is error\", error.JSON());\r\n        notifyUser(\"Something went wrong please try again\");\r\n        setLoading(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const notifyUser = (data) => toast(data);\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress />\r\n      </Backdrop>\r\n\r\n      <Container>\r\n        <FormWrap>\r\n          <Header>\r\n            <Logoimage src={Logo}></Logoimage>\r\n            <HomeButton to=\"/dashboard\">Home</HomeButton>\r\n          </Header>\r\n          <FormContent>\r\n            <Form>\r\n              <FormH2>COMMUNICATION WITH A STRATEGY</FormH2>\r\n              <FormH1>Login to your account</FormH1>\r\n              <FormLabel htmlFor=\"for\">Email</FormLabel>\r\n              <FormInputWrap>\r\n                <FiMail\r\n                  style={{\r\n                    color: \"#DFE2E6\",\r\n                    marginRight: \"5px\",\r\n                    height: \"16px\",\r\n                    width: \"20px\",\r\n                  }}\r\n                />\r\n                <FormInput\r\n                  type=\"email\"\r\n                  placeholder=\"Your Email\"\r\n                  value={email}\r\n                  onChange={(e) => {\r\n                    // console.log(\"This is password\", e.target.value);\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                ></FormInput>\r\n              </FormInputWrap>\r\n\r\n              <FormLabel htmlFor=\"for\">Password</FormLabel>\r\n              <FormInputWrap>\r\n                <MdVpnKey\r\n                  style={{\r\n                    color: \"#DFE2E6\",\r\n                    marginRight: \"5px\",\r\n                    height: \"16px\",\r\n                    width: \"20px\",\r\n                  }}\r\n                />\r\n                <FormInput\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  required\r\n                  value={password}\r\n                  onChange={(e) => {\r\n                    // console.log(\"This is password\", e.target.value);\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                  placeholder=\"Your Password\"\r\n                ></FormInput>\r\n                <BsEyeFill\r\n                  style={{\r\n                    color: \"#DFE2E6\",\r\n                    marginRight: \"5px\",\r\n                    height: \"16px\",\r\n                    width: \"20px\",\r\n                  }}\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                />\r\n              </FormInputWrap>\r\n              <FormButtonWrap>\r\n                <FormButton\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    if (email != \"\" && password != \"\") {\r\n                      if (!validator.validate(email)) {\r\n                        notifyUser(\"Please enter a valid email\");\r\n                      } else {\r\n                        registerTheUser();\r\n                      }\r\n                    } else {\r\n                      notifyUser(\"Please fill all fields\");\r\n                    }\r\n                  }}\r\n                >\r\n                  Register\r\n                </FormButton>\r\n                <FormButton1\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    if (email != \"\" && password != \"\") {\r\n                      if (!validator.validate(email)) {\r\n                        notifyUser(\"Please enter a valid email\");\r\n                      } else {\r\n                        loginUserUsingCredential();\r\n                      }\r\n                    } else {\r\n                      notifyUser(\"Please fill all fields\");\r\n                    }\r\n                  }}\r\n                >\r\n                  login\r\n                </FormButton1>\r\n              </FormButtonWrap>\r\n\r\n              <RememberWrap>\r\n                <label>\r\n                  <Checkbox checked={checked} onChange={handleCheckboxChange} />\r\n                  <Rememberme>Remember me</Rememberme>\r\n                </label>\r\n                <label>\r\n                  <Forgotpassword>Forgot password</Forgotpassword>\r\n                </label>\r\n              </RememberWrap>\r\n              <Underline></Underline>\r\n              <Or>\r\n                <Forgotpassword>or</Forgotpassword>\r\n              </Or>\r\n              <FormButton3>\r\n                <TwitterButtonText>\r\n                  {\" \"}\r\n                  <FaTwitter\r\n                    style={{\r\n                      color: \"white\",\r\n                      marginRight: \"10px\",\r\n                      height: \"16px\",\r\n                      width: \"19px\",\r\n                    }}\r\n                  />\r\n                  Login with Twitter\r\n                </TwitterButtonText>\r\n              </FormButton3>\r\n            </Form>\r\n          </FormContent>\r\n        </FormWrap>\r\n        <Privacypolicy>Privacy Policy</Privacypolicy>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\homeElementsRight.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\canvaJS\\canvasjs.react.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\signup\\checkbox.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\dashboard\\canvaJS\\canvasjs.min.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\ApiHelper.js",["208"],"import axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nconst URL = \"https://prod.recruitsuite.co/api/\";\r\n\r\nexport const registerUser = (email, password) => {\r\n  var data = JSON.stringify({\r\n    user: {\r\n      email: email,\r\n      password: password,\r\n      password_confirmation: password,\r\n      name: email.substring(0, 4),\r\n      phone: \"\",\r\n    },\r\n  });\r\n\r\n  return axios({\r\n    method: \"post\",\r\n    url: URL + \"users\",\r\n    headers: {\r\n      Accept: \"application/json; version=1\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n    data: data,\r\n  });\r\n};\r\n\r\nexport const loginUser = (email, password) => {\r\n  var data = JSON.stringify({\r\n    email: email,\r\n    password: password,\r\n  });\r\n\r\n  return axios({\r\n    method: \"post\",\r\n    url: URL + \"login\",\r\n    headers: {\r\n      Accept: \"application/json; version=1\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n    data: data,\r\n  });\r\n};\r\n\r\nexport const getUserAccountInformation = () => {\r\n  console.log(JSON.parse(localStorage.getItem(\"user\")));\r\n\r\n  return axios({\r\n    method: \"get\",\r\n    url: URL + \"login\",\r\n    headers: {\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      Accept: \"application/json; version=1\",\r\n      \"X-Auth-Token\":\r\n        \"eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyMjc2fQ.y4IqaYFOmbhXxC2RL4rvqVVY3ePvmlcpUA2tzRXkatI\",\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getTaskQueue = () => {\r\n  console.log(JSON.parse(localStorage.getItem(\"user\")).token);\r\n\r\n  return axios({\r\n    method: \"get\",\r\n    url: URL + \"login\",\r\n    headers: {\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      Accept: \"application/json; version=1\",\r\n      \"X-Auth-Token\": JSON.parse(localStorage.getItem(\"user\")).token,\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getTaskQueueForDay = (date) => {\r\n  var endpoint = \"\";\r\n  // console.log(\"This is date\", date === null);\r\n  if (date === null) {\r\n    endpoint = \"task_queues\";\r\n  } else {\r\n    endpoint = `task_queues?date=${date}`;\r\n  }\r\n  return axios({\r\n    method: \"get\",\r\n    url: URL + endpoint,\r\n    headers: {\r\n      Accept: \"application/json; version=1\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      \"X-Auth-Token\": JSON.parse(localStorage.getItem(\"user\")).token,\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getMonthlyStats = () => {\r\n  var start = new moment().startOf(\"month\").format(\"YYYY-MM-DD\");\r\n  var end = new moment().endOf(\"month\").format(\"YYYY-MM-DD\");\r\n  // console.log(\"This is start\", start);\r\n  // console.log(\"This is end\", end);\r\n  // console.log(\"This is \", URL + `stats?start_date=${start}&end_date=${end}`);\r\n  return axios({\r\n    method: \"get\",\r\n    url: URL + `stats?start_date=${start}&end_date=${end}`,\r\n    headers: {\r\n      Accept: \"application/json; version=1\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      \"X-Auth-Token\": JSON.parse(localStorage.getItem(\"user\")).token,\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getThisQuarterStats = () => {\r\n  var start = new moment().startOf(\"quarter\").format(\"YYYY-MM-DD\");\r\n  var end = new moment().endOf(\"quarter\").format(\"YYYY-MM-DD\");\r\n  // console.log(\"This is start\", start);\r\n  // console.log(\"This is end\", end);\r\n  // console.log(\"This is \", URL + `stats?start_date=${start}&end_date=${end}`);\r\n  return axios({\r\n    method: \"get\",\r\n    url: URL + `stats?start_date=${start}&end_date=${end}`,\r\n    headers: {\r\n      Accept: \"application/json; version=1\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      \"X-Auth-Token\": JSON.parse(localStorage.getItem(\"user\")).token,\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getLastQuarterStats = () => {\r\n  var quarterAdjustment = (moment().month() % 3) + 1;\r\n  var lastQuarterEndDate = moment()\r\n    .subtract({ months: quarterAdjustment })\r\n    .endOf(\"month\");\r\n  var lastQuarterStartDate = lastQuarterEndDate\r\n    .clone()\r\n    .subtract({ months: 3 })\r\n    .startOf(\"month\");\r\n\r\n  var start = lastQuarterEndDate\r\n    .clone()\r\n    .subtract({ months: 3 })\r\n    .startOf(\"month\")\r\n    .format(\"YYYY-MM-DD\");\r\n  var end = moment()\r\n    .subtract({ months: quarterAdjustment })\r\n    .endOf(\"month\")\r\n    .format(\"YYYY-MM-DD\");\r\n  // console.log(\"This is start\", start);\r\n  // console.log(\"This is end\", end);\r\n  // console.log(\"This is \", URL + `stats?start_date=${start}&end_date=${end}`);\r\n  return axios({\r\n    method: \"get\",\r\n    url: URL + `stats?start_date=${start}&end_date=${end}`,\r\n    headers: {\r\n      Accept: \"application/json; version=1\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      \"X-Auth-Token\": JSON.parse(localStorage.getItem(\"user\")).token,\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getThisYearStats = () => {\r\n  var start = new moment().startOf(\"year\").format(\"YYYY-MM-DD\");\r\n  var end = new moment().endOf(\"year\").format(\"YYYY-MM-DD\");\r\n  // console.log(\"This is start\", start);\r\n  // console.log(\"This is end\", end);\r\n  // console.log(\"This is \", URL + `stats?start_date=${start}&end_date=${end}`);\r\n  return axios({\r\n    method: \"get\",\r\n    url: URL + `stats?start_date=${start}&end_date=${end}`,\r\n    headers: {\r\n      Accept: \"application/json; version=1\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      \"X-Auth-Token\": JSON.parse(localStorage.getItem(\"user\")).token,\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getLastYearStats = () => {\r\n  var start = new moment()\r\n    .startOf(\"year\")\r\n    .clone()\r\n    .subtract({ years: 1 })\r\n    .startOf(\"year\")\r\n    .format(\"YYYY-MM-DD\");\r\n  var end = new moment()\r\n    .endOf(\"year\")\r\n    .clone()\r\n    .subtract({ years: 1 })\r\n    .endOf(\"year\")\r\n    .format(\"YYYY-MM-DD\");\r\n  console.log(\"This is start\", start);\r\n  console.log(\"This is end\", end);\r\n  console.log(\"This is \", URL + `stats?start_date=${start}&end_date=${end}`);\r\n  return axios({\r\n    method: \"get\",\r\n    url: URL + `stats?start_date=${start}&end_date=${end}`,\r\n    headers: {\r\n      Accept: \"application/json; version=1\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      \"X-Auth-Token\": JSON.parse(localStorage.getItem(\"user\")).token,\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getLastMonthStats = () => {\r\n  var start = new moment()\r\n    .startOf(\"month\")\r\n    .clone()\r\n    .subtract({ months: 1 })\r\n    .startOf(\"month\")\r\n    .format(\"YYYY-MM-DD\");\r\n  var end = new moment()\r\n    .endOf(\"month\")\r\n    .clone()\r\n    .subtract({ months: 1 })\r\n    .endOf(\"month\")\r\n    .format(\"YYYY-MM-DD\");\r\n  // console.log(\"This is start of last month\", start);\r\n  // console.log(\"This is end of last month\", end);\r\n  // console.log(\r\n  //   \"This is  url\",\r\n  //   URL + `stats?start_date=${start}&end_date=${end}`\r\n  // );\r\n  return axios({\r\n    method: \"get\",\r\n    url: URL + `stats?start_date=${start}&end_date=${end}`,\r\n    headers: {\r\n      Accept: \"application/json; version=1\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      \"X-Auth-Token\": JSON.parse(localStorage.getItem(\"user\")).token,\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getLast30Stats = () => {\r\n  var start = new moment().clone().subtract({ days: 30 }).format(\"YYYY-MM-DD\");\r\n  var end = new moment().format(\"YYYY-MM-DD\");\r\n  // console.log(\"This is start\", start);\r\n  // console.log(\"This is end\", end);\r\n  // console.log(\"This is \", URL + `stats?start_date=${start}&end_date=${end}`);\r\n  return axios({\r\n    method: \"get\",\r\n    url: URL + `stats?start_date=${start}&end_date=${end}`,\r\n    headers: {\r\n      Accept: \"application/json; version=1\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization:\r\n        \"StackedSportsAuthKey key=b41d1779-d6db-44be-97b4-ecf39e207364\",\r\n      \"X-Auth-Token\": JSON.parse(localStorage.getItem(\"user\")).token,\r\n      Cookie:\r\n        \"ahoy_visitor=9ed0658b-aeb7-4590-b919-6b9e2ac080fe; ahoy_visit=be028ec4-d074-4dde-8218-f166f678ee87; _memcache-recruitsuite_session=d8ee35c9e0cd796c691901ada77a8bf6\",\r\n    },\r\n  });\r\n};\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\charts\\Doughnut.jsx",["209"],"import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default class Doughnut extends React.Component {\r\n  componentDidMount() {\r\n    var ctx = document.getElementById(\"myChart3\");\r\n    this.myChart = new Chart(ctx, {\r\n      type: \"doughnut\",\r\n      data: {\r\n        labels: [\"Recruite Messages\", \"Personal texts\", \"Total DM's\"],\r\n        datasets: [\r\n          {\r\n            data: [\r\n              this.props.monthlyStats.total_recruits_messaged,\r\n\r\n              this.props.monthlyStats.total_personal_texts,\r\n              this.props.monthlyStats.total_dms,\r\n            ],\r\n            label: \"Trends\",\r\n            lineTension: 0,\r\n            fill: false,\r\n            backgroundColor: \"#19a5d3\",\r\n            backgroundColor: [\"#c0504e\", \"#8bb14c\", \"#4f81bc\"],\r\n            hoverBackgroundColor: \"#26a69a\",\r\n          },\r\n\r\n          // {\r\n          //   label: \"Recruite Messages\",\r\n          //   data: this.props.monthlyStats\r\n          //     ? this.props.monthlyStats.total_recruits_messaged\r\n          //     : 0,\r\n          //   lineTension: 0,\r\n          //   fill: false,\r\n          //   backgroundColor: \"#19a5d3\",\r\n          //   hoverBackgroundColor: \"#26a69a\",\r\n          // },\r\n          // {\r\n          //   label: \"Personal texts\",\r\n          //   data: this.props.monthlyStats\r\n          //     ? this.props.monthlyStats.total_personal_texts\r\n          //     : 0,\r\n          //   lineTension: 0,\r\n          //   fill: false,\r\n          //   backgroundColor: \"#19a5d3\",\r\n          //   hoverBackgroundColor: \"#26a69a\",\r\n          // },\r\n          // {\r\n          //   label: \"Total DM's\",\r\n          //   data: this.props.monthlyStats\r\n          //     ? this.props.monthlyStats.total_dms\r\n          //     : 0,\r\n          //   lineTension: 0,\r\n          //   fill: false,\r\n          //   backgroundColor: \"#19a5d3\",\r\n          //   hoverBackgroundColor: \"#26a69a\",\r\n          // },\r\n        ],\r\n      },\r\n      options: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        tooltips: {\r\n          borderColor: \"#202020\",\r\n          borderWidth: 2,\r\n          backgroundColor: \"#fafafa\",\r\n          cornerRadius: 2,\r\n          yPadding: 10,\r\n          bodyFontColor: \"#0f0f0f\",\r\n        },\r\n      },\r\n    });\r\n    // console.log(\"this is coming here\");\r\n  }\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   this.myChart.data.datasets[0].data = nextProps.data;\r\n  //   this.myChart.update();\r\n  // }\r\n  render() {\r\n    var data = [\r\n      this.props.monthlyStats.total_recruits_messaged,\r\n\r\n      this.props.monthlyStats.total_personal_texts,\r\n      this.props.monthlyStats.total_dms,\r\n    ];\r\n    if (this.myChart) {\r\n      this.myChart.data.datasets[0].data = data;\r\n      this.myChart.update();\r\n    }\r\n    return (\r\n      <canvas\r\n        className={this.props.className}\r\n        id=\"myChart3\"\r\n        width=\"1160\"\r\n        height=\"500\"\r\n      ></canvas>\r\n    );\r\n  }\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\charts\\BarChart.jsx",["210"],"import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default class ListingChart extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.myChart = null;\r\n  }\r\n  componentDidMount() {\r\n    var ctx = document.getElementById(\"myChart2\");\r\n    var lbl = [];\r\n    var ds = [];\r\n\r\n    const data =\r\n      this.props.monthlyStats &&\r\n      this.props.monthlyStats.total_messages_by_period;\r\n    if (data) {\r\n      for (var i = 0; i < data.length; i++) {\r\n        lbl.push(data[i][0]);\r\n        ds.push(data[i][1]);\r\n      }\r\n    }\r\n\r\n    this.myChart = new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: lbl,\r\n        datasets: [\r\n          {\r\n            data: ds,\r\n            label: \"Trends\",\r\n            lineTension: 0,\r\n            fill: false,\r\n            backgroundColor: \"#19a5d3\",\r\n            hoverBackgroundColor: \"#26a69a\",\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scaleStartValue: 0,\r\n        legend: {\r\n          display: false,\r\n        },\r\n        tooltips: {\r\n          borderColor: \"#202020\",\r\n          borderWidth: 2,\r\n          backgroundColor: \"#fafafa\",\r\n          cornerRadius: 2,\r\n          yPadding: 10,\r\n          bodyFontColor: \"#0f0f0f\",\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              display: false,\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n              ticks: {\r\n                display: false,\r\n                maxTicksLimit: 7,\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          ],\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n              categoryPercentage: 1.0,\r\n              barPercentage: 0.7,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n    // console.log(\"this is coming here\", lbl);\r\n  }\r\n\r\n  render() {\r\n    var lbl = [];\r\n    var ds = [];\r\n    const data =\r\n      this.props.monthlyStats &&\r\n      this.props.monthlyStats.total_messages_by_period;\r\n    if (data) {\r\n      for (var i = 0; i < data.length; i++) {\r\n        lbl.push(data[i][0]);\r\n        ds.push(data[i][1]);\r\n      }\r\n    }\r\n    var dataSets = [\r\n      {\r\n        data: ds,\r\n        label: \"Trends\",\r\n        lineTension: 0,\r\n        fill: false,\r\n        backgroundColor: \"#19a5d3\",\r\n        hoverBackgroundColor: \"#26a69a\",\r\n      },\r\n    ];\r\n    if (this.myChart) {\r\n      this.myChart.data.datasets[0].data = ds;\r\n      this.myChart.data.labels = lbl;\r\n      this.myChart.update();\r\n    }\r\n\r\n    // console.log(\"this is coming here in render\", lbl);\r\n    return (\r\n      <canvas\r\n        className={this.props.className}\r\n        id=\"myChart2\"\r\n        width=\"1160\"\r\n        height=\"500\"\r\n      ></canvas>\r\n    );\r\n  }\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\Pages\\Contacts.js",["211","212"],"import React, { useState } from \"react\";\r\nimport Sidebar from \"../components/common/sidebar/sidebar\";\r\nimport Contacts from \"../components/Contacts\";\r\n// import { Modal } from \"../model\";\r\nexport default function Dashboard() {\r\n  const [showModal, setShowModal] = useState(true);\r\n\r\n  const openModal = () => {\r\n    setShowModal((prev) => !prev);\r\n  };\r\n  return (\r\n    <>\r\n      <Sidebar contacts={true} />\r\n      <Contacts contacts={true} />\r\n    </>\r\n  );\r\n}\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\sidebar.js",["213","214","215","216","217","218","219","220","221"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SidebarData } from \"./sidebarData\";\r\nimport SubMenu from \"./subMenu\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport DashboardLogo from \"../../../images/dashboardLogo.png\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport Logo from \"../../../images/logoRight.png\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { IoIosNotificationsOutline } from \"react-icons/io\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport { BiChat, BiBell } from \"react-icons/bi\";\r\nimport Modal from \"../../dashboard/model\";\r\nimport { GlobalStyle } from \"./globalStyle\";\r\nimport { IoIosMenu } from \"react-icons/io\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ForumOutlinedIcon from \"@material-ui/icons/ForumOutlined\";\r\n\r\nconst Nav = styled.div`\r\n  height: 70px;\r\n  display: flex;\r\n  background: white;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  z-index: 100;\r\n  @media screen and (max-width: 1000px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst NavResponsive = styled.div`\r\n  display: none;\r\n  @media screen and (max-width: 1000px) {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    background: white;\r\n    height: 70px;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 70px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #ffffff;\r\n  color: #060606;\r\n  width: 250px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 71px;\r\n  left: ${({ sidebar }) => (sidebar ? \"0\" : \"-100%\")};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n\r\n  @media screen and (min-width: 1000px) {\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\nconst Logoimage = styled.img`\r\n  margin: 44px;\r\n  height: 38px;\r\n  width: 176px;\r\n`;\r\n\r\nconst Button = styled(Link)`\r\n  border-radius: 5px;\r\n  background: #3871da;\r\n  white-space: nowrap;\r\n  padding: 0.5rem;\r\n  width: 219px;\r\n  margin: 2rem;\r\n  box-sizing: border-box;\r\n  font-weight: bold;\r\n  color: white;\r\n  font-size: 14px;\r\n  outtion: all 0.2s ease-in-out;\r\n  @medialine: none;\r\n  border: none;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  text-decoration: none;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transi screen and (max-width: 1000px) {\r\n    width: 180px;\r\n  }\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  width: 270px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-right-width: 2px;\r\n  border-right-color: #d8d8d8;\r\n  border-right-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #d8d8d8;\r\n  border-bottom-style: solid;\r\n  height: 70px;\r\n`;\r\n\r\nconst NavLogo = styled.img`\r\n  height: 37px;\r\n  width: 60px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FormInput = styled.input`\r\n  border: none;\r\n  background: #f5f6f9;\r\n  font-size: 14px;\r\n  ::placeholder {\r\n    color: rgba(0, 0, 0, 0.4);\r\n    font-size: 14px;\r\n    letter-spacing: 0.43px;\r\n    line-height: 17px;\r\n  }\r\n  width: 80%;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst FormInputWrap = styled.div`\r\n  padding: 5px;\r\n  padding-right: 0px;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  border-radius: 4px;\r\n  border-color: rgb(117, 117, 117);\r\n  border-width: 1px;\r\n  background: #f5f6f9;\r\n  display: flex;\r\n  width: 600px;\r\n  margin: 2rem;\r\n  height: 40px;\r\n`;\r\n\r\nconst LeftSectionNav = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst NotificationIcon = styled(NotificationsIcon)``;\r\n\r\nconst HeaderIcons = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const setOpen = (a) => {\r\n    setShowModal(a);\r\n  };\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <Modal open={showModal} setShowModal={setShowModal} />\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <NavResponsive>\r\n          <IoIosMenu\r\n            style={{ color: \"#222222\", margin: \"2rem\" }}\r\n            size={30}\r\n            onClick={showSidebar}\r\n          />\r\n\r\n          <LeftSectionNav>\r\n            <BiBell\r\n              style={{\r\n                color: \"#999898\",\r\n                marginRight: \"15px\",\r\n                marginLeft: \"15px\",\r\n                height: \"24.2px\",\r\n                width: \"21.2px\",\r\n              }}\r\n            />\r\n            <BiChat\r\n              style={{\r\n                color: \"#222222\",\r\n                marginRight: \"15px\",\r\n                marginLeft: \"15px\",\r\n                height: \"24px\",\r\n                width: \"25px\",\r\n              }}\r\n            />\r\n          </LeftSectionNav>\r\n        </NavResponsive>\r\n        <Nav>\r\n          <LogoContainer>\r\n            <NavLogo src={DashboardLogo} />\r\n          </LogoContainer>\r\n          <FormInputWrap>\r\n            <FiSearch\r\n              style={{\r\n                color: \"#999898\",\r\n                marginRight: \"5px\",\r\n                marginLeft: \"5px\",\r\n                height: \"26px\",\r\n                width: \"30px\",\r\n              }}\r\n            />\r\n            <FormInput\r\n              type=\"email\"\r\n              placeholder=\"Search for contacts by name, phone number, Twitter Handle or School\"\r\n            ></FormInput>\r\n          </FormInputWrap>\r\n          <LeftSectionNav>\r\n            <div\r\n              style={{\r\n                height: \"70px\",\r\n                width: \"2px\",\r\n                background: \"#d8d8d8\",\r\n              }}\r\n            ></div>\r\n            <BiBell\r\n              style={{\r\n                color: \"#222222\",\r\n                marginRight: \"15px\",\r\n                marginLeft: \"15px\",\r\n                height: \"24.2px\",\r\n                width: \"21.2px\",\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                height: \"70px\",\r\n                width: \"2px\",\r\n                background: \"#d8d8d8\",\r\n              }}\r\n            ></div>\r\n            <BiChat\r\n              style={{\r\n                color: \"#222222\",\r\n                marginRight: \"15px\",\r\n                marginLeft: \"15px\",\r\n                height: \"24px\",\r\n                width: \"25px\",\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                height: \"70px\",\r\n                width: \"2px\",\r\n                background: \"#d8d8d8\",\r\n              }}\r\n            ></div>\r\n            <Logoimage src={Logo}></Logoimage>\r\n          </LeftSectionNav>\r\n        </Nav>\r\n        <SidebarNav\r\n          sidebar={sidebar}\r\n          style={{ width: props.contacts ? 60 : 250 }}\r\n        >\r\n          <Grid container direction=\"column\">\r\n            <SidebarWrap>\r\n              {props.contacts === null && (\r\n                <Button onClick={openModal}>+ New</Button>\r\n              )}\r\n\r\n              {SidebarData.map((item, index) => {\r\n                return (\r\n                  <SubMenu contacts={props.contacts} item={item} key={index} />\r\n                );\r\n              })}\r\n            </SidebarWrap>\r\n            <div\r\n              style={{\r\n                height: \"100%\",\r\n                position: \"absolute\",\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                alignItems=\"flex-end\"\r\n                style={{\r\n                  padding: 20,\r\n                  paddingTop: 0,\r\n\r\n                  height: \"90%\",\r\n                }}\r\n              >\r\n                <Grid item md={4} xs={4} lg={4}>\r\n                  {\" \"}\r\n                  <img\r\n                    style={{ width: 40, height: 40, borderRadius: 20 }}\r\n                    src={\r\n                      JSON.parse(localStorage.getItem(\"user\")).twitter_profile\r\n                        .profile_image\r\n                    }\r\n                  ></img>\r\n                </Grid>\r\n                <Grid item md={8} xs={8} lg={8}>\r\n                  {props.contacts === null && (\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      alignItems=\"center\"\r\n                      style={{ height: \"100%\" }}\r\n                    >\r\n                      <p style={{ margin: 0, fontWeight: \"bold\" }}>\r\n                        {JSON.parse(localStorage.getItem(\"user\")).first_name +\r\n                          \" \" +\r\n                          JSON.parse(localStorage.getItem(\"user\")).last_name}\r\n                      </p>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\sidebarData.js",["222","223","224"],"import React from \"react\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\nimport { BiHome } from \"react-icons/bi\";\r\nimport { BsPerson } from \"react-icons/bs\";\r\nimport { BiCommentAdd } from \"react-icons/bi\";\r\nimport { TiImageOutline } from \"react-icons/ti\";\r\nimport { TiSocialTwitter } from \"react-icons/ti\";\r\nimport { BsBarChart } from \"react-icons/bs\";\r\nimport { IoIosSettings } from \"react-icons/io\";\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: \"Dashboard\",\r\n    path: \"/dashboard\",\r\n    icon: (\r\n      <BiHome\r\n        style={{ height: \"24px\", width: \"24px\", opacity: 0.9 }}\r\n        color=\"#222222\"\r\n      />\r\n    ),\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: \"Contact\",\r\n    path: \"/contacts\",\r\n    icon: (\r\n      <BsPerson\r\n        style={{ height: \"24px\", width: \"24px\", opacity: 0.9 }}\r\n        color=\"#222222\"\r\n      />\r\n    ),\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: \"Message Create\",\r\n    path: \"/\",\r\n    icon: (\r\n      <BiCommentAdd\r\n        style={{ height: \"24px\", width: \"24px\", opacity: 0.9 }}\r\n        color=\"#222222\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Media\",\r\n    path: \"/\",\r\n    icon: (\r\n      <TiImageOutline\r\n        style={{ height: \"24px\", width: \"24px\", opacity: 0.9 }}\r\n        color=\"#222222\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Publishing\",\r\n    path: \"/\",\r\n    icon: (\r\n      <TiSocialTwitter\r\n        style={{ height: \"24px\", width: \"24px\", opacity: 0.9 }}\r\n        color=\"#222222\"\r\n      />\r\n    ),\r\n\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n  {\r\n    title: \"Reports\",\r\n    path: \"/\",\r\n    icon: (\r\n      <BsBarChart\r\n        style={{\r\n          height: \"24px\",\r\n          width: \"24px\",\r\n          opacity: 0.9,\r\n        }}\r\n        color=\"#222222\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Settings\",\r\n    path: \"/\",\r\n    icon: (\r\n      <IoIosSettings\r\n        style={{ height: \"24px\", width: \"24px\", opacity: 0.9 }}\r\n        color=\"#222222\"\r\n      />\r\n    ),\r\n  },\r\n];\r\n\r\n// Example item sub menu\r\n// {\r\n//     title: \"Overview\",\r\n//     path: \"/overview\",\r\n//     icon: <AiIcons.AiFillHome />,\r\n//     iconClosed: <RiIcons.RiArrowDownSFill />,\r\n//     iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n//     subNav: [\r\n//       {\r\n//         title: \"Users\",\r\n//         path: \"/overview/users\",\r\n//         icon: <IoIcons.IoIosPaper />,\r\n//       },\r\n//       {\r\n//         title: \"Revenue\",\r\n//         path: \"/overview/revenue\",\r\n//         icon: <IoIcons.IoIosPaper />,\r\n//       },\r\n//     ],\r\n//   },\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\globalStyle.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\sidebar\\subMenu.js",["225"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SidebarLink = styled(Link)`\r\n  display: flex;\r\n  color: #373d4a;\r\n  cursor: pointer;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px;\r\n  list-style: none;\r\n  height: 60px;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  font-family: ProximaNovaSemibold;\r\n  padding-left: 1rem;\r\n\r\n  &:hover {\r\n    background: linear-gradient(90deg, #dddddd 10%, rgba(74, 144, 226, 0) 100%);\r\n    border-left: 4px solid #a4a4a4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SidebarLabel = styled.span`\r\n  color: #373d4a;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  letter-spacing: 0;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst DropdownLink = styled(Link)`\r\n  background: #414757;\r\n  height: 60px;\r\n  padding-left: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #f5f5f5;\r\n  font-size: 18px;\r\n  &:hover {\r\n    background: #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst LabelContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ImgIcon = styled.img``;\r\n\r\nconst SubMenu = ({ item, contacts }) => {\r\n  const [subnav, setSubnav] = useState(false);\r\n\r\n  const showSubnav = () => setSubnav(!subnav);\r\n\r\n  return (\r\n    <>\r\n      <SidebarLink to={item.path} onClick={item.subNav && showSubnav}>\r\n        <LabelContainer>\r\n          {item.icon}\r\n          {contacts == null && <SidebarLabel>{item.title}</SidebarLabel>}\r\n        </LabelContainer>\r\n        <div>\r\n          {item.subNav && subnav\r\n            ? item.iconOpened\r\n            : item.subNav\r\n            ? item.iconClosed\r\n            : null}\r\n        </div>\r\n      </SidebarLink>\r\n      {subnav &&\r\n        item.subNav.map((item, index) => {\r\n          return (\r\n            <DropdownLink to={item.path} key={index}>\r\n              {item.icon}\r\n              <SidebarLabel>{item.title}</SidebarLabel>\r\n            </DropdownLink>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubMenu;\r\n","E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\Contacts\\index.js",["226","227","228","229","230","231"],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Elements\\Elements.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Fields\\IconTextField.js",[],"E:\\Work\\BS\\Recuit-Suite-Stuff\\react-js-recruit-suite\\src\\components\\common\\Buttons\\IconButton.js",[],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":1,"column":17,"nodeType":"238","messageId":"239","endLine":1,"endColumn":25},{"ruleId":"236","severity":1,"message":"240","line":4,"column":10,"nodeType":"238","messageId":"239","endLine":4,"endColumn":15},{"ruleId":"236","severity":1,"message":"241","line":6,"column":10,"nodeType":"238","messageId":"239","endLine":6,"endColumn":19},{"ruleId":"236","severity":1,"message":"242","line":8,"column":9,"nodeType":"238","messageId":"239","endLine":8,"endColumn":18},{"ruleId":"236","severity":1,"message":"243","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":17},{"ruleId":"236","severity":1,"message":"244","line":5,"column":8,"nodeType":"238","messageId":"239","endLine":5,"endColumn":13},{"ruleId":"236","severity":1,"message":"245","line":7,"column":8,"nodeType":"238","messageId":"239","endLine":7,"endColumn":29},{"ruleId":"236","severity":1,"message":"246","line":9,"column":10,"nodeType":"238","messageId":"239","endLine":9,"endColumn":14},{"ruleId":"236","severity":1,"message":"247","line":39,"column":3,"nodeType":"238","messageId":"239","endLine":39,"endColumn":12},{"ruleId":"236","severity":1,"message":"248","line":42,"column":8,"nodeType":"238","messageId":"239","endLine":42,"endColumn":16},{"ruleId":"236","severity":1,"message":"249","line":141,"column":9,"nodeType":"238","messageId":"239","endLine":141,"endColumn":16},{"ruleId":"250","severity":1,"message":"251","line":175,"column":41,"nodeType":"252","messageId":"253","endLine":175,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":177,"column":51,"nodeType":"256","messageId":"257","endLine":177,"endColumn":53},{"ruleId":"250","severity":1,"message":"251","line":195,"column":41,"nodeType":"252","messageId":"253","endLine":195,"endColumn":43},{"ruleId":"250","severity":1,"message":"251","line":218,"column":41,"nodeType":"252","messageId":"253","endLine":218,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":220,"column":40,"nodeType":"256","messageId":"257","endLine":220,"endColumn":42},{"ruleId":"236","severity":1,"message":"258","line":234,"column":10,"nodeType":"238","messageId":"239","endLine":234,"endColumn":19},{"ruleId":"236","severity":1,"message":"259","line":234,"column":21,"nodeType":"238","messageId":"239","endLine":234,"endColumn":33},{"ruleId":"236","severity":1,"message":"260","line":235,"column":9,"nodeType":"238","messageId":"239","endLine":235,"endColumn":21},{"ruleId":"236","severity":1,"message":"261","line":248,"column":15,"nodeType":"238","messageId":"239","endLine":248,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":270,"column":50,"nodeType":"252","messageId":"253","endLine":270,"endColumn":52},{"ruleId":"254","severity":1,"message":"262","line":536,"column":66,"nodeType":"256","messageId":"257","endLine":536,"endColumn":68},{"ruleId":"250","severity":1,"message":"251","line":747,"column":56,"nodeType":"252","messageId":"253","endLine":747,"endColumn":58},{"ruleId":"250","severity":1,"message":"251","line":759,"column":53,"nodeType":"252","messageId":"253","endLine":759,"endColumn":55},{"ruleId":"250","severity":1,"message":"251","line":770,"column":58,"nodeType":"252","messageId":"253","endLine":770,"endColumn":60},{"ruleId":"250","severity":1,"message":"251","line":781,"column":55,"nodeType":"252","messageId":"253","endLine":781,"endColumn":57},{"ruleId":"250","severity":1,"message":"251","line":792,"column":56,"nodeType":"252","messageId":"253","endLine":792,"endColumn":58},{"ruleId":"250","severity":1,"message":"251","line":803,"column":53,"nodeType":"252","messageId":"253","endLine":803,"endColumn":55},{"ruleId":"250","severity":1,"message":"251","line":814,"column":54,"nodeType":"252","messageId":"253","endLine":814,"endColumn":56},{"ruleId":"236","severity":1,"message":"263","line":9,"column":3,"nodeType":"238","messageId":"239","endLine":9,"endColumn":16},{"ruleId":"236","severity":1,"message":"264","line":10,"column":3,"nodeType":"238","messageId":"239","endLine":10,"endColumn":25},{"ruleId":"236","severity":1,"message":"265","line":11,"column":3,"nodeType":"238","messageId":"239","endLine":11,"endColumn":16},{"ruleId":"236","severity":1,"message":"266","line":6,"column":10,"nodeType":"238","messageId":"239","endLine":6,"endColumn":14},{"ruleId":"236","severity":1,"message":"267","line":3,"column":5,"nodeType":"238","messageId":"239","endLine":3,"endColumn":14},{"ruleId":"236","severity":1,"message":"268","line":4,"column":5,"nodeType":"238","messageId":"239","endLine":4,"endColumn":13},{"ruleId":"236","severity":1,"message":"269","line":9,"column":8,"nodeType":"238","messageId":"239","endLine":9,"endColumn":13},{"ruleId":"236","severity":1,"message":"270","line":22,"column":7,"nodeType":"238","messageId":"239","endLine":22,"endColumn":11},{"ruleId":"254","severity":1,"message":"262","line":46,"column":72,"nodeType":"256","messageId":"257","endLine":46,"endColumn":74},{"ruleId":"254","severity":1,"message":"262","line":103,"column":42,"nodeType":"256","messageId":"257","endLine":103,"endColumn":44},{"ruleId":"254","severity":1,"message":"255","line":117,"column":44,"nodeType":"256","messageId":"257","endLine":117,"endColumn":46},{"ruleId":"254","severity":1,"message":"255","line":183,"column":40,"nodeType":"256","messageId":"257","endLine":183,"endColumn":42},{"ruleId":"236","severity":1,"message":"271","line":41,"column":7,"nodeType":"238","messageId":"239","endLine":41,"endColumn":23},{"ruleId":"236","severity":1,"message":"272","line":85,"column":9,"nodeType":"238","messageId":"239","endLine":85,"endColumn":22},{"ruleId":"250","severity":1,"message":"273","line":188,"column":66,"nodeType":"252","messageId":"274","endLine":188,"endColumn":68},{"ruleId":"254","severity":1,"message":"262","line":208,"column":40,"nodeType":"256","messageId":"257","endLine":208,"endColumn":42},{"ruleId":"254","severity":1,"message":"262","line":210,"column":78,"nodeType":"256","messageId":"257","endLine":210,"endColumn":80},{"ruleId":"232","replacedBy":"275"},{"ruleId":"234","replacedBy":"276"},{"ruleId":"236","severity":1,"message":"277","line":1,"column":17,"nodeType":"238","messageId":"239","endLine":1,"endColumn":26},{"ruleId":"236","severity":1,"message":"278","line":30,"column":8,"nodeType":"238","messageId":"239","endLine":30,"endColumn":11},{"ruleId":"236","severity":1,"message":"248","line":33,"column":8,"nodeType":"238","messageId":"239","endLine":33,"endColumn":16},{"ruleId":"236","severity":1,"message":"243","line":34,"column":8,"nodeType":"238","messageId":"239","endLine":34,"endColumn":17},{"ruleId":"236","severity":1,"message":"245","line":37,"column":8,"nodeType":"238","messageId":"239","endLine":37,"endColumn":29},{"ruleId":"236","severity":1,"message":"249","line":92,"column":9,"nodeType":"238","messageId":"239","endLine":92,"endColumn":16},{"ruleId":"236","severity":1,"message":"279","line":94,"column":10,"nodeType":"238","messageId":"239","endLine":94,"endColumn":14},{"ruleId":"236","severity":1,"message":"280","line":94,"column":16,"nodeType":"238","messageId":"239","endLine":94,"endColumn":23},{"ruleId":"236","severity":1,"message":"260","line":97,"column":9,"nodeType":"238","messageId":"239","endLine":97,"endColumn":21},{"ruleId":"250","severity":1,"message":"273","line":206,"column":43,"nodeType":"252","messageId":"274","endLine":206,"endColumn":45},{"ruleId":"236","severity":1,"message":"281","line":5,"column":3,"nodeType":"238","messageId":"239","endLine":5,"endColumn":7},{"ruleId":"236","severity":1,"message":"282","line":15,"column":3,"nodeType":"238","messageId":"239","endLine":15,"endColumn":7},{"ruleId":"254","severity":1,"message":"262","line":191,"column":31,"nodeType":"256","messageId":"257","endLine":191,"endColumn":33},{"ruleId":"254","severity":1,"message":"262","line":191,"column":49,"nodeType":"256","messageId":"257","endLine":191,"endColumn":51},{"ruleId":"254","severity":1,"message":"262","line":207,"column":31,"nodeType":"256","messageId":"257","endLine":207,"endColumn":33},{"ruleId":"254","severity":1,"message":"262","line":207,"column":49,"nodeType":"256","messageId":"257","endLine":207,"endColumn":51},{"ruleId":"236","severity":1,"message":"283","line":158,"column":7,"nodeType":"238","messageId":"239","endLine":158,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":23,"column":13,"nodeType":"286","messageId":"257","endLine":23,"endColumn":28},{"ruleId":"236","severity":1,"message":"287","line":93,"column":9,"nodeType":"238","messageId":"239","endLine":93,"endColumn":17},{"ruleId":"236","severity":1,"message":"241","line":6,"column":10,"nodeType":"238","messageId":"239","endLine":6,"endColumn":19},{"ruleId":"236","severity":1,"message":"242","line":8,"column":9,"nodeType":"238","messageId":"239","endLine":8,"endColumn":18},{"ruleId":"236","severity":1,"message":"288","line":11,"column":10,"nodeType":"238","messageId":"239","endLine":11,"endColumn":35},{"ruleId":"236","severity":1,"message":"289","line":12,"column":8,"nodeType":"238","messageId":"239","endLine":12,"endColumn":17},{"ruleId":"236","severity":1,"message":"290","line":15,"column":10,"nodeType":"238","messageId":"239","endLine":15,"endColumn":21},{"ruleId":"236","severity":1,"message":"291","line":18,"column":8,"nodeType":"238","messageId":"239","endLine":18,"endColumn":25},{"ruleId":"236","severity":1,"message":"292","line":52,"column":7,"nodeType":"238","messageId":"239","endLine":52,"endColumn":14},{"ruleId":"236","severity":1,"message":"293","line":172,"column":7,"nodeType":"238","messageId":"239","endLine":172,"endColumn":23},{"ruleId":"236","severity":1,"message":"294","line":174,"column":7,"nodeType":"238","messageId":"239","endLine":174,"endColumn":18},{"ruleId":"236","severity":1,"message":"295","line":186,"column":9,"nodeType":"238","messageId":"239","endLine":186,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":322,"column":19,"nodeType":"298","endLine":328,"endColumn":20},{"ruleId":"236","severity":1,"message":"299","line":2,"column":13,"nodeType":"238","messageId":"239","endLine":2,"endColumn":20},{"ruleId":"236","severity":1,"message":"300","line":3,"column":13,"nodeType":"238","messageId":"239","endLine":3,"endColumn":20},{"ruleId":"236","severity":1,"message":"301","line":4,"column":13,"nodeType":"238","messageId":"239","endLine":4,"endColumn":20},{"ruleId":"236","severity":1,"message":"302","line":56,"column":7,"nodeType":"238","messageId":"239","endLine":56,"endColumn":14},{"ruleId":"236","severity":1,"message":"243","line":2,"column":38,"nodeType":"238","messageId":"239","endLine":2,"endColumn":47},{"ruleId":"236","severity":1,"message":"303","line":14,"column":8,"nodeType":"238","messageId":"239","endLine":14,"endColumn":20},{"ruleId":"236","severity":1,"message":"304","line":15,"column":8,"nodeType":"238","messageId":"239","endLine":15,"endColumn":14},{"ruleId":"236","severity":1,"message":"305","line":64,"column":21,"nodeType":"238","messageId":"239","endLine":64,"endColumn":33},{"ruleId":"236","severity":1,"message":"306","line":67,"column":22,"nodeType":"238","messageId":"239","endLine":67,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":559,"column":21,"nodeType":"298","endLine":562,"endColumn":22},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'showModal' is assigned a value but never used.","'openModal' is assigned a value but never used.","'TextField' is defined but never used.","'Chart' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'Link' is defined but never used.","'ChartTop2' is defined but never used.","'MenuItem' is defined but never used.","'classes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'queueDate' is assigned a value but never used.","'setQueueDate' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'fileredQueue' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Privacypolicy' is defined but never used.","'PrivacypolicyContainer' is defined but never used.","'VertivalSpace' is defined but never used.","'Grid' is defined but never used.","'Component' is assigned a value but never used.","'CanvasJS' is assigned a value but never used.","'Paper' is defined but never used.","'rows' is assigned a value but never used.","'ListTopContainer' is assigned a value but never used.","'messageSender' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["307"],["308"],"'useEffect' is defined but never used.","'Ex1' is defined but never used.","'rank' is assigned a value but never used.","'setRank' is assigned a value but never used.","'Icon' is defined but never used.","'Text' is defined but never used.","'lastQuarterStartDate' is assigned a value but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","'dataSets' is assigned a value but never used.","'IoIosNotificationsOutline' is defined but never used.","'ForumIcon' is defined but never used.","'GlobalStyle' is defined but never used.","'ForumOutlinedIcon' is defined but never used.","'NavIcon' is assigned a value but never used.","'NotificationIcon' is assigned a value but never used.","'HeaderIcons' is assigned a value but never used.","'setOpen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'IoIcons' is defined but never used.","'ImgIcon' is assigned a value but never used.","'Autocomplete' is defined but never used.","'styled' is defined but never used.","'setFilterBar' is assigned a value but never used.","'setRankFilter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]